/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagement;

import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.Window;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Atel Dot Net
 */
public class HomePage extends javax.swing.JFrame {

    String startingDate , endingDate;
    public static String CurrentAdmin;
    int Sold_Size=0;
    int AllStock_Size=1;
    private ImageIcon icon;
    float Due_Today=0;
    public float VatCal=0;
   
    /**
     * Creates new form HomePage
     */
    public HomePage() {
        
   
 
       initComponents();
       
       //Vat_Calculate();
       sellProductsToday();
       CREDIT();
     //  PROFIT();
       Due_Total();
      
      // Profit();
       DueTodayDate();
       CASH();
       SetIcon();
       
    }
      public void SetIcon()
    {
        icon=new ImageIcon(getClass().getResource("shop32.png"));
        this.setIconImage(icon.getImage());
    }
    
/*public void setAdminName(String Admin)
{
    CurrentAdmin=Admin;
}*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        SellProductButton = new javax.swing.JButton();
        AddProductButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        MemberAccount = new javax.swing.JButton();
        StockProductButton = new javax.swing.JButton();
        toDate = new datechooser.beans.DateChooserCombo();
        jPanel3 = new javax.swing.JPanel();
        TableHeader = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fromDate = new datechooser.beans.DateChooserCombo();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        Total = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableToday = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        CreditText = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        DueText = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        CashText = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        DueToday = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        VatPriceText = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        ExitMenu = new javax.swing.JMenu();
        AddProductMenu = new javax.swing.JMenu();
        NewProductItem = new javax.swing.JMenuItem();
        OldProductItem = new javax.swing.JMenuItem();
        SellProductMenu = new javax.swing.JMenu();
        StockMenu = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        MemberInfoItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        DueBillItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TANSHEN IT SHOP");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 383, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 0, 1320, 50);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SellProductButton.setBackground(new java.awt.Color(51, 102, 255));
        SellProductButton.setFont(new java.awt.Font("Tempus Sans ITC", 1, 28)); // NOI18N
        SellProductButton.setForeground(new java.awt.Color(255, 255, 255));
        SellProductButton.setText("SELL PRODUCT");
        SellProductButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SellProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellProductButtonActionPerformed(evt);
            }
        });

        AddProductButton.setBackground(new java.awt.Color(51, 102, 255));
        AddProductButton.setFont(new java.awt.Font("Tempus Sans ITC", 1, 28)); // NOI18N
        AddProductButton.setForeground(new java.awt.Color(255, 255, 255));
        AddProductButton.setText("ADD PRODUCT");
        AddProductButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddProductButtonActionPerformed(evt);
            }
        });

        UpdateButton.setBackground(new java.awt.Color(51, 102, 255));
        UpdateButton.setFont(new java.awt.Font("Tempus Sans ITC", 1, 26)); // NOI18N
        UpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        UpdateButton.setText("STOCK UPDATE");
        UpdateButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        MemberAccount.setBackground(new java.awt.Color(51, 102, 255));
        MemberAccount.setFont(new java.awt.Font("Tempus Sans ITC", 1, 26)); // NOI18N
        MemberAccount.setForeground(new java.awt.Color(255, 255, 255));
        MemberAccount.setText("ACCOUNT");
        MemberAccount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        MemberAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberAccountActionPerformed(evt);
            }
        });

        StockProductButton.setBackground(new java.awt.Color(51, 102, 255));
        StockProductButton.setFont(new java.awt.Font("Tempus Sans ITC", 1, 26)); // NOI18N
        StockProductButton.setForeground(new java.awt.Color(255, 255, 255));
        StockProductButton.setText("STOCK");
        StockProductButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        StockProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StockProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SellProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(AddProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MemberAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StockProductButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(AddProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(SellProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(StockProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(MemberAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(20, 60, 280, 600);

        toDate.setCurrentView(new datechooser.view.appearance.AppearancesList("custom",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    toDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null));
toDate.setCalendarPreferredSize(new java.awt.Dimension(400, 350));
getContentPane().add(toDate);
toDate.setBounds(930, 80, 200, 40);

jPanel3.setBackground(new java.awt.Color(153, 153, 153));
jPanel3.setLayout(null);

TableHeader.setFont(new java.awt.Font("Tempus Sans ITC", 3, 18)); // NOI18N
TableHeader.setForeground(new java.awt.Color(51, 51, 51));
TableHeader.setText("                                                     Sell ProductsToday");
jPanel3.add(TableHeader);
TableHeader.setBounds(110, 0, 810, 40);

getContentPane().add(jPanel3);
jPanel3.setBounds(320, 130, 1020, 40);

jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
jLabel4.setForeground(new java.awt.Color(0, 0, 153));
jLabel4.setText("TO DATE   :");
getContentPane().add(jLabel4);
jLabel4.setBounds(790, 70, 120, 50);

jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
jLabel6.setForeground(new java.awt.Color(0, 0, 153));
jLabel6.setText("FROM DATE   :");
getContentPane().add(jLabel6);
jLabel6.setBounds(390, 80, 150, 40);

fromDate.setCurrentView(new datechooser.view.appearance.AppearancesList("custom",
    new datechooser.view.appearance.ViewAppearance("custom",
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            true,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 255),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(128, 128, 128),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.LabelPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.LabelPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(255, 0, 0),
            false,
            false,
            new datechooser.view.appearance.swing.ButtonPainter()),
        (datechooser.view.BackRenderer)null,
        false,
        true)));
fromDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED,
(java.awt.Color)null,
(java.awt.Color)null,
(java.awt.Color)null,
(java.awt.Color)null));
fromDate.setCalendarPreferredSize(new java.awt.Dimension(400, 350));
getContentPane().add(fromDate);
fromDate.setBounds(570, 80, 190, 40);

jButton1.setBackground(new java.awt.Color(204, 204, 255));
jButton1.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
jButton1.setForeground(new java.awt.Color(51, 51, 51));
jButton1.setText("SEARCH ");
jButton1.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
    }
    });
    getContentPane().add(jButton1);
    jButton1.setBounds(1170, 80, 170, 40);

    jPanel5.setBackground(new java.awt.Color(204, 204, 255));
    jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel5.setForeground(new java.awt.Color(255, 255, 255));

    Total.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    Total.setForeground(new java.awt.Color(51, 51, 51));
    Total.setText("TOTAL  :");

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(Total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
    );

    getContentPane().add(jPanel5);
    jPanel5.setBounds(960, 540, 380, 60);

    jTableToday.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jTableToday.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jTableToday.setForeground(new java.awt.Color(51, 51, 51));
    jTableToday.setRowHeight(30);
    jScrollPane2.setViewportView(jTableToday);

    getContentPane().add(jScrollPane2);
    jScrollPane2.setBounds(320, 180, 1020, 350);

    jPanel6.setBackground(new java.awt.Color(204, 204, 255));
    jPanel6.setLayout(null);

    CreditText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    CreditText.setForeground(new java.awt.Color(51, 51, 51));
    CreditText.setText(" CREDIT :");
    CreditText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel6.add(CreditText);
    CreditText.setBounds(0, 0, 330, 60);

    getContentPane().add(jPanel6);
    jPanel6.setBounds(320, 540, 330, 60);

    jPanel7.setBackground(new java.awt.Color(204, 204, 255));
    jPanel7.setLayout(null);

    DueText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    DueText.setForeground(new java.awt.Color(51, 51, 51));
    DueText.setText("ALL  DUE :");
    DueText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel7.add(DueText);
    DueText.setBounds(0, 0, 330, 50);

    getContentPane().add(jPanel7);
    jPanel7.setBounds(320, 610, 330, 50);

    jPanel8.setBackground(new java.awt.Color(204, 204, 255));
    jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

    CashText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    CashText.setForeground(new java.awt.Color(51, 51, 51));
    CashText.setText("CASH :");

    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
    jPanel8.setLayout(jPanel8Layout);
    jPanel8Layout.setHorizontalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel8Layout.createSequentialGroup()
            .addComponent(CashText, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
    );
    jPanel8Layout.setVerticalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(CashText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
    );

    getContentPane().add(jPanel8);
    jPanel8.setBounds(960, 610, 380, 50);

    jPanel9.setBackground(new java.awt.Color(204, 204, 255));
    jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

    DueToday.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    DueToday.setForeground(new java.awt.Color(51, 51, 51));
    DueToday.setText("TODAY DUE :");

    javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
    jPanel9.setLayout(jPanel9Layout);
    jPanel9Layout.setHorizontalGroup(
        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(DueToday, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
    );
    jPanel9Layout.setVerticalGroup(
        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(DueToday, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
    );

    getContentPane().add(jPanel9);
    jPanel9.setBounds(660, 610, 290, 50);

    jPanel4.setBackground(new java.awt.Color(204, 204, 255));
    jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

    VatPriceText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(VatPriceText, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(VatPriceText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
    );

    getContentPane().add(jPanel4);
    jPanel4.setBounds(660, 540, 290, 60);

    jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuBar1.setAlignmentX(1.0F);
    jMenuBar1.setAutoscrolls(true);
    jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jMenuBar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jMenuBar1.setMargin(new java.awt.Insets(5, 5, 50, 50));

    ExitMenu.setBackground(new java.awt.Color(153, 153, 153));
    ExitMenu.setBorder(null);
    ExitMenu.setText("  EXIT");
    ExitMenu.setDelay(100);
    ExitMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    ExitMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    ExitMenu.setPreferredSize(new java.awt.Dimension(105, 19));
    ExitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ExitMenuMouseClicked(evt);
        }
    });
    ExitMenu.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            ExitMenuKeyPressed(evt);
        }
    });
    jMenuBar1.add(ExitMenu);

    AddProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    AddProductMenu.setBorder(null);
    AddProductMenu.setText("     ADD PRODUCT");
    AddProductMenu.setDelay(100);
    AddProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    AddProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    AddProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    AddProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            AddProductMenuMouseClicked(evt);
        }
    });

    NewProductItem.setText("NEW PRODUCTS");
    NewProductItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    NewProductItem.setPreferredSize(new java.awt.Dimension(150, 20));
    NewProductItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            NewProductItemMouseClicked(evt);
        }
    });
    NewProductItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            NewProductItemActionPerformed(evt);
        }
    });
    AddProductMenu.add(NewProductItem);

    OldProductItem.setText("OLD PRODUCTS");
    OldProductItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    OldProductItem.setPreferredSize(new java.awt.Dimension(150, 20));
    OldProductItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            OldProductItemMouseClicked(evt);
        }
    });
    OldProductItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            OldProductItemActionPerformed(evt);
        }
    });
    AddProductMenu.add(OldProductItem);

    jMenuBar1.add(AddProductMenu);

    SellProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    SellProductMenu.setBorder(null);
    SellProductMenu.setText("      SELL PRODUCT");
    SellProductMenu.setDelay(100);
    SellProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    SellProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    SellProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    SellProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            SellProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(SellProductMenu);

    StockMenu.setBackground(new java.awt.Color(153, 153, 153));
    StockMenu.setBorder(null);
    StockMenu.setText("            STOCK");
    StockMenu.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    StockMenu.setDelay(100);
    StockMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    StockMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    StockMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    StockMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            StockMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(StockMenu);

    jMenu6.setBackground(new java.awt.Color(153, 153, 153));
    jMenu6.setBorder(null);
    jMenu6.setText("          ACCOUNT");
    jMenu6.setDelay(100);
    jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu6.setMargin(new java.awt.Insets(0, 0, 0, 50));
    jMenu6.setPreferredSize(new java.awt.Dimension(150, 20));

    MemberInfoItem.setText(" MEMBER INFO");
    MemberInfoItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    MemberInfoItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    MemberInfoItem.setPreferredSize(new java.awt.Dimension(150, 26));
    MemberInfoItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            MemberInfoItemMouseClicked(evt);
        }
    });
    MemberInfoItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            MemberInfoItemActionPerformed(evt);
        }
    });
    jMenu6.add(MemberInfoItem);

    jMenuItem1.setText(" UPDATE STOCK");
    jMenuItem1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem1ActionPerformed(evt);
        }
    });
    jMenu6.add(jMenuItem1);

    DueBillItem.setText(" DUE BILL");
    DueBillItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    DueBillItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    DueBillItem.setPreferredSize(new java.awt.Dimension(127, 26));
    DueBillItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            DueBillItemMouseClicked(evt);
        }
    });
    DueBillItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DueBillItemActionPerformed(evt);
        }
    });
    jMenu6.add(DueBillItem);

    jMenuBar1.add(jMenu6);

    jMenu1.setBackground(new java.awt.Color(153, 153, 153));
    jMenu1.setText("        REFRESH");
    jMenu1.setActionCommand("    REFRESH");
    jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jMenu1MouseClicked(evt);
        }
    });
    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    setSize(new java.awt.Dimension(1387, 741));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SellProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellProductButtonActionPerformed
        // TODO add your handling code here:
        SellProduct obj=new SellProduct();
        obj.setVisible(true);
         this.dispose();

    }//GEN-LAST:event_SellProductButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        
      Update_Request();    
    
    }//GEN-LAST:event_UpdateButtonActionPerformed

    public void Update_Request()
    {
        JPasswordField pf = new JPasswordField();
        String Security_code="" ;
                int x = JOptionPane.showConfirmDialog(null, pf, "Enter SECURITY CODE", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (x == JOptionPane.OK_OPTION) 
        {
         Security_code = new String(pf.getPassword());
 //  System.err.println("You entered: " + password);
        }
        String code="";
         try {
             
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            
            String sql="SELECT SecurityCode FROM SHOPINFO";
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
            
            while (resultSet.next())
            {
               
               code=resultSet.getString("SecurityCode");
            }
           
            connection.close();
       
            if(Security_code.equals(code))
            {
                UpdateStock obj=new UpdateStock();
                obj.setVisible(true);
                 this.dispose();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "WRONG CODE ");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void StockProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StockProductButtonActionPerformed
        // TODO add your handling code here:
        StockInfo obj=new StockInfo();
        //obj.PhoneNumber(PhoneNumber);
        obj.setVisible(true);
         this.dispose();

    }//GEN-LAST:event_StockProductButtonActionPerformed

    private void MemberAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberAccountActionPerformed


        // TODO add your handling code here:
       /* String PhoneNumber = JOptionPane.showInputDialog("PLEASE ENTER MEMBER PHONE NUMBER ");
        System.out.println(PhoneNumber);
        if(PhoneNumber==null)
        {
            
        }
     else
        {
            if(PhoneNumber.equals(""))
            {
                JOptionPane.showMessageDialog(null, "PLEASE ENTER MEMBER PHONENUMBER !");
            }
            else
            {
                MemberAccount obj=new MemberAccount();
                obj.PhoneNumber(PhoneNumber);
                obj.setVisible(true);
            }
           
        }  */
       
            MemberAccount obj=new MemberAccount();
            obj.setVisible(true);
             this.dispose();
       
    }//GEN-LAST:event_MemberAccountActionPerformed

    private void AddProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductButtonActionPerformed
       
        
             ProductControl obj=new ProductControl();
             obj.setVisible(true);
             this.dispose();
        
        
       
    }//GEN-LAST:event_AddProductButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     //   ProfitText.setText(" PROFIT: ");
        //Vat_Calculate();
        sellProductsToday();
        CREDIT();
      //  PROFIT();
        TableHeader.setText("                                                   "+startingDate+"     TO      "+endingDate);
        Due_Total();
        ShopName();
       // Profit();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ExitMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitMenuKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ExitMenuKeyPressed

    private void ExitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMenuMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_ExitMenuMouseClicked

    private void AddProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddProductMenuMouseClicked
        // TODO add your handling code here:
        ProductControl obj = new ProductControl();
        obj.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_AddProductMenuMouseClicked

    private void SellProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SellProductMenuMouseClicked
        // TODO add your handling code here:
        SellProduct obj=new SellProduct();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SellProductMenuMouseClicked

    private void StockMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockMenuMouseClicked
        // TODO add your handling code here:
        StockInfo obj=new StockInfo();
        obj.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_StockMenuMouseClicked

    private void MemberInfoItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MemberInfoItemMouseClicked
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemMouseClicked

    private void DueBillItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DueBillItemMouseClicked
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemMouseClicked

    private void MemberInfoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberInfoItemActionPerformed
        // TODO add your handling code here:
          MemberAccount obj=new MemberAccount();
         obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemActionPerformed

    private void DueBillItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DueBillItemActionPerformed
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Update_Request();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        HomePage obj=new HomePage();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenu1MouseClicked

    private void NewProductItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewProductItemMouseClicked
        // TODO add your handling code here:
        AddProduct obj=new AddProduct();
        obj.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_NewProductItemMouseClicked

    private void OldProductItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OldProductItemMouseClicked
        // TODO add your handling code here:
        AddOldProduct obj=new AddOldProduct();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_OldProductItemMouseClicked

    private void NewProductItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewProductItemActionPerformed
        // TODO add your handling code here:
         AddProduct obj=new AddProduct();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_NewProductItemActionPerformed

    private void OldProductItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OldProductItemActionPerformed
        // TODO add your handling code here:
        AddOldProduct obj=new AddOldProduct();
        obj.setVisible(true);
        this.dispose();
                                
    }//GEN-LAST:event_OldProductItemActionPerformed

    public void sellProductsToday()
    {
         DateFormate(); 
           // TODO add your handling code here:
        Vat_Calculate();
        
        
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

      
            Statement statement = connection.createStatement();
            
            String sql="SELECT  C.ProductId, C.ProductName, S.SellingDate, S.ProductQuantity, S.SellingPrice,S.PaymentType, S.SoldBy ,S.VatTotal FROM CURRENT_STOCK C, SOLD_PRODUCT S\n" +
"WHERE C.ProductId=S.ProductId AND S.SellingDate IN "
                    + "(SELECT S.SellingDate from SOLD_PRODUCT WHERE S.SellingDate>='"+startingDate+"' AND S.SellingDate<='"+endingDate+"')";
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
            // vat price query
      /*     String sqlVat=" SELECT I.VatPrice FROM INVOICE I where I.InvoiceID IN \n" +
      " (SELECT S.InvoiceID FROM SOLD_PRODUCT S WHERE S.SellingDate>='"+startingDate+"' AND S.SellingDate<='"+endingDate+"')";
       
           ResultSet resultSet1 = statement
                    .executeQuery(sqlVat); */
           
           
           String[] columnNames = {"Serial", "ProductId","Product Name","Quantity","SELLING PRICE","TOTAL","DATE", "SOLD BY", "PAYMENT"};
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTableToday.setModel(model);
            
        
            int i=1;
            float StockIntotal=0;
           
              
            float TotalPrice=0;
            float INTotalPrice=0;

           
            
            while (resultSet.next()) {
               
               String PID=resultSet.getString("ProductId");
               int ProductQuantity= resultSet.getInt("ProductQuantity");
               String name =resultSet.getString("ProductName");
          
               String date =resultSet.getString("SellingDate");
             
               float Sprice= resultSet.getFloat("SellingPrice");
               
               String SoldBY=resultSet.getString("SoldBy");
               
               String PAY=resultSet.getString("PaymentType");
               //Vat_Total =resultSet.getFloat("VatTotal");
               
               TotalPrice =ProductQuantity*Sprice;
               INTotalPrice +=TotalPrice;
              // VatIn +=INTotalPrice;
             //  VatIn +=Vat_Total;
               model.addRow(new Object[]{i, PID, name, ProductQuantity, Sprice, TotalPrice,date, SoldBY, PAY});
               i++;
               
            
            }
            
            //vat calculate
             float Vat_Total=0;
            float VatIn=0;
           /* while(resultSet1.next()){
                VatIn=resultSet1.getFloat("VatPrice");
                Vat_Total +=VatIn;
            } */
           System.out.println("VAT CALCULATE : "+Vat_Total);
          
          //  Total_With_Vat=INTotalPrice+VatIn;
            float tmp=INTotalPrice+VatCal;
            Total.setText(" Total  : "+tmp);
            connection.close();
            
           
            
        } catch (Exception e) {
            e.printStackTrace();
           // JOptionPane.showMessageDialog(null, "Message "+e);
        }
         
        
    }                                            

     public void DateFormate()
    {
        String from=fromDate.getText();
            String month1="";
            String date1="";
            String year1="";
           
            int j=0, k=0;
            
            for(int i=0; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    ++i;
                    j=i;
                    break;
                }
                month1 +=c;
               
            }
            
             for(int i=j; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    ++i;
                    k=i;
                    break;
                }
                date1 +=c;
               
            }
            
             for(int i=k; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    
                    break;
                }
                year1 +=c;
               
            }
             
             
              String To=toDate.getText();
            String month2="";
            String date2="";
            String year2="";
           
             j=0;
             k=0;
            
            for(int i=0; i<To.length(); i++)
            {
                char c=To.charAt(i);
                if(c=='/')
                {
                    ++i;
                    j=i;
                    break;
                }
                month2 +=c;
               
            }
            
             for(int i=j; i<To.length(); i++)
            {
                char c=To.charAt(i);
                if(c=='/')
                {
                    ++i;
                    k=i;
                    break;
                }
                date2 +=c;
               
            }
            
             for(int i=k; i<To.length(); i++)
            {
                char c=To.charAt(i);
                if(c=='/')
                {
                    
                    break;
                }
                year2 +=c;
               
            }
             
             startingDate="20"+year1+"-"+month1+"-"+date1;
             endingDate="20"+year2+"-"+month2+"-"+date2;
             
             System.out.println(startingDate);
             System.out.println(endingDate); 
    }
     
     public void  CREDIT()
     {
         
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

      
            Statement statement = connection.createStatement();
            String sql="SELECT SellingPrice, ProductQuantity FROM SOLD_PRODUCT WHERE SOLD_PRODUCT.PaymentType='CREDIT' AND SellingDate>='"+startingDate+"' AND SellingDate<='"+endingDate+"'";
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
           
            float Credit_total=0;
            int qnt=0;
            float temp=0;
            
            while (resultSet.next()) {
                
             Credit_total =resultSet.getFloat("SellingPrice");
             qnt=resultSet.getInt("ProductQuantity");
            
             temp +=(Credit_total*qnt);
            }
          
           
            CreditText.setText("CREDIT: "+temp);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
         
     
     }
     
    public void Due_Total()
    {
        float Total_Paid=0;
        float Total_Due=0;
           try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEREPAY");
            
          //  String MemberName="", Pay_Date="";
            float Bill=0;
           
        
            int i=1;
            float Intotal1=0;
          //  float Total_Paid=0;
       
            while (resultSet.next()) {
              
              
             // IsExist=true;
            //  MemberName=resultSet.getString("MemberName");
           //   Pay_Date=resultSet.getString("PayDate");
              Bill=resultSet.getFloat("Repay");
              
              
               Intotal1 +=Bill;
          
            }
            
          // MemberNameText.setText(""+MemberName);
          // RepayTotal.setText(""+Intotal1);
           Total_Paid=Intotal1;
        
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

           
           try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL");
            
            String MemberName="", Due_Date="";
            float Bill=0;
          //  float Total_Due=0;
            
            
       
            int i=1;
            float Intotal=0;
            float TotalPrice=0;
         
            while (resultSet.next()) {
              
           
              Bill=resultSet.getFloat("Bill");
              
              
               Intotal +=Bill;
              
           
            }
            
           Total_Due=Intotal;
           
           DueText.setText("ALL DUE: "+(Total_Due-Total_Paid));
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void ShopName()
    {
          try {
             
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            
           // String sql="SELECT InvoiceID FROM INVOICE where PhoneNumber= '"+phoneNumber1+"'";
            String sql="SELECT * FROM SHOPINFO";
            
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
        //    int x=0;
        String Name="";
            while (resultSet.next())
            {
               Name=resultSet.getString("ShopName");
              
            }
            
             jLabel1.setText(" "+Name);
            connection.close();
       
           
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    public void Vat_Calculate()
    {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

      
            Statement statement = connection.createStatement();
            
            String sql=" SELECT I.VatPrice FROM INVOICE I where I.InvoiceID IN \n" +
      " (SELECT S.InvoiceID FROM SOLD_PRODUCT S WHERE S.SellingDate>='"+startingDate+"' AND S.SellingDate<='"+endingDate+"')";
            ResultSet resultSet = statement
                    .executeQuery(sql);
           
           
             float Vat_Total=0;
            float VatIn=0;
        
            while (resultSet.next()) {
             
                VatIn=resultSet.getFloat("VatPrice");
                Vat_Total +=VatIn;
            }
            
            //INITIALIZE GLOBAL FOR OTHERS TO USE
           VatCal=Vat_Total;
           
           System.out.println("VAT CALCULATE : "+Vat_Total);
          
           VatPriceText.setText("VAT TOTAL : "+VatCal);
           connection.close();
            
           
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Message "+e);
        }
         
    }
 /*   public void Profit()
    {
           Sold_Size=0;
           ArrayList<String> Product_id_sold = new ArrayList<String>();
           ArrayList<Integer> Quantity_sold = new ArrayList<Integer>();
           ArrayList<Float> Sell_sold = new ArrayList<Float>();
           
           ArrayList<String> Product_id_stock = new ArrayList<String>();
           ArrayList<Integer> Quantity_stock = new ArrayList<Integer>();
           ArrayList<Float> Sell_stock = new ArrayList<Float>();
         
           Product_id_sold.clear();
           Quantity_sold.clear();
           Sell_sold.clear();
           
           Product_id_stock.clear();
           Quantity_stock.clear();
           Sell_stock.clear();
           
           try {
                 
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection1 = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection1.createStatement();
            String sql="SELECT * FROM SOLD_PRODUCT WHERE SellingDate>='"+startingDate+"' AND SellingDate<='"+endingDate+"'";
            //System.out.println(sql);
            ResultSet resultSet1 = statement
                    .executeQuery(sql);
            
          //  String sql="SELECT * FROM AdmissionForm WHERE MemberId=?";
            
           // System.out.println("To");
           
            while (resultSet1.next()) 
            {
               int Q=resultSet1.getInt("ProductQuantity");
               String Id=resultSet1.getString("ProductId");
               float P=resultSet1.getFloat("SellingPrice");
          
                  Product_id_sold.add(Id);
                  Quantity_sold.add(Q);
                  Sell_sold.add(P);
                  Sold_Size++;
                 // System.out.println(Id);
            }
            connection1.close();
            
           }catch(Exception e)
           {
               System.out.println(e);
           }
           
           // SORT SOLD PRODUCT
           
           //END
         
        
         
           try {
                 
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection2 = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection2.createStatement();
            String sql="SELECT * FROM ALLSTOCK WHERE ProductId IN(";
        //    System.out.println("Size of SOLD  "+ Product_id.size());
            for(int k=0; k<Product_id_sold.size(); k++)
            {
                if(k==0)
                {
                      sql +="'";
                }
                if(k==Product_id_sold.size()-1)
                {
                    sql +=""+Product_id_sold.get(k);
                    sql +="')";
                    break;
                }
                else
                {
                    sql +=""+Product_id_sold.get(k);
                    sql +="','";
                    sql +=""+Product_id_sold.get(k);
                    sql +="','";
                    sql +=""+Product_id_sold.get(k);
                }
                sql +="','";
            }
            sql +="ORDER BY Id DESC";
          //  System.out.println("Query "+sql);
            
            ResultSet resultSet2 = statement
                    .executeQuery(sql);
            
         
            int m=0;
            int k=1;
            
            while (resultSet2.next()) 
            {
               int Q=resultSet2.getInt("ProductQuantity");
               String Id=resultSet2.getString("ProductId");
               float P=resultSet2.getFloat("Price");
              
                for(m=0; m<Q; m++)
                {
                  //System.out.println("----"+Id);
                  Product_id_stock.add(Id);
                  Quantity_stock.add(k);
                  Sell_stock.add(P);
                  AllStock_Size++;
                }
                 
             
            }
            connection2.close();
            
           }catch(Exception e)
           {
               System.out.println(e);
           }
           
        
          
         float Profit=0;
         for (int i=0; i<Sold_Size; i++)
         {
             boolean Fill_Quantity=false;
             int Q=Quantity_sold.get(i);
             String Id=Product_id_sold.get(i);
             float P=Sell_sold.get(i);
             
             int j=0;
             int chk=0;
             float sub=0;
             while(Fill_Quantity !=true)
             {
                  int Qa=Quantity_stock.get(j);
                  //System.out.println(Qa);
                 // System.out.println("Id "+);
                  String Ida=Product_id_stock.get(j);
                  float Pa=Sell_stock.get(j);
                 
                 // System.out.println("ID  "+Ida+"qnt "+Pa);
                  
                  if(Id.equals(Ida))
                  {
                    //  Profit += P-Pa;
                     if(AllStock_Size==chk)
                     {
                         Profit =Profit+(sub*(Q-chk));
                         Fill_Quantity=true;
                     }
                      
                      if(chk==Q)
                      {
                          Fill_Quantity=true;
                      }
                      else
                      {
                        chk++;
                        sub =P-Pa;
                        Profit = Profit+sub ;
                        sub=0;
                      //  System.out.println("ID "+Ida+"  Qnt "+Qa+"  Profit"+(P-Pa));
                        
                      }
                     
                     
                  }
                  
                  j++;
             }
           
         } 
         
          System.out.println("Profit   "+Profit);
        //  ProfitText.setText(" PROFIT: "+Profit);
       
    } */
    
    public void DueTodayDate()
    {
         float Intotal=0, Intotal1=0;
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL WHERE DueDate=(SELECT CONVERT(date, getdate()))");
            
            String MemberName="", Due_Date="";
            float Bill=0;
           
       
            float TotalPrice=0;
         
            while (resultSet.next()) {
             
              Bill=resultSet.getFloat("Bill");
          
               Intotal +=Bill;
            
            }

      
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        Due_Today=Intotal;
        // DATE WITH PAID
        DueToday.setText(" TODAY DUE :"+(Intotal));
                                                 
    }
    
    public void CASH()
    {
        // CREDIT TODAY
        float  Price=0, Total=0;
        int quantity=0;
         float total_vat=0;
           
        
           try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            
            ResultSet resultSet = statement
                    .executeQuery("SELECT ProductQuantity, SellingPrice FROM SOLD_PRODUCT WHERE PaymentType !='CREDIT' AND SellingDate=(SELECT CONVERT(date, getdate()))");
            
          //  String MemberName="", Pay_Date="";
           float temp=0;
            while (resultSet.next()) {
              
             quantity=resultSet.getInt("ProductQuantity");
             Price=resultSet.getFloat("SellingPrice");
             temp=quantity*Price;
             
             Total +=temp;
             
            }
           
       
           connection.close();
           
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, e);
        }
           
         try
         {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");
            Statement statement = connection.createStatement();
            
            
              ResultSet resultSet = statement
                    .executeQuery("SELECT VatTotal From SOLD_PRODUCT WHERE SellingDate=(SELECT CONVERT(date, getdate()))");
            
          //  String MemberName="", Pay_Date="";
           float vat=0;
          
           while (resultSet.next()) {
             
              vat=resultSet.getFloat("VatTotal");
             
              total_vat +=vat;
             
            }
            
           float tmp=Total+total_vat-Due_Today;
           CashText.setText(" TODAY CASH : "+tmp);
          
            connection.close();
         }catch(Exception e)
         {
             JOptionPane.showMessageDialog(null, e);
         }
           
         float tmp=Total+total_vat-Due_Today;
         CashText.setText(" TODAY CASH : "+tmp);
          
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddProductButton;
    private javax.swing.JMenu AddProductMenu;
    private javax.swing.JLabel CashText;
    private javax.swing.JLabel CreditText;
    private javax.swing.JMenuItem DueBillItem;
    private javax.swing.JLabel DueText;
    private javax.swing.JLabel DueToday;
    private javax.swing.JMenu ExitMenu;
    private javax.swing.JButton MemberAccount;
    private javax.swing.JMenuItem MemberInfoItem;
    private javax.swing.JMenuItem NewProductItem;
    private javax.swing.JMenuItem OldProductItem;
    private javax.swing.JButton SellProductButton;
    private javax.swing.JMenu SellProductMenu;
    private javax.swing.JMenu StockMenu;
    private javax.swing.JButton StockProductButton;
    private javax.swing.JLabel TableHeader;
    private javax.swing.JLabel Total;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel VatPriceText;
    private datechooser.beans.DateChooserCombo fromDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableToday;
    private datechooser.beans.DateChooserCombo toDate;
    // End of variables declaration//GEN-END:variables
}
