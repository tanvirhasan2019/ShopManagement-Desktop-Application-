/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Atel Dot Net
 */
public class DueBill extends javax.swing.JFrame {

   // boolean Search=false;
     boolean IsExist=false;
     String DATE="";
     String Admin="";
     float PAID=0, DUE=0;
     private ImageIcon icon;
     
    /**
     * Creates new form DueBill
     */
    public DueBill() {
        initComponents();
        
          HomePage1 obj=new HomePage1(); 
         Admin=obj.CurrentAdmin.toString();
         SetIcon();
        
    }

      public void SetIcon()
    {
        icon=new ImageIcon(getClass().getResource("shop32.png"));
        this.setIconImage(icon.getImage());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AmountText = new javax.swing.JTextField();
        MemberNameText = new javax.swing.JTextField();
        PhoneNumberText = new javax.swing.JTextField();
        AllDue = new javax.swing.JButton();
        DateChoose = new datechooser.beans.DateChooserCombo();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        RepayTotal = new javax.swing.JTextField();
        DueTotal = new javax.swing.JTextField();
        Due = new javax.swing.JButton();
        AllPaid = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        AddAmount1 = new javax.swing.JButton();
        Repay = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        DateSearch = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        DUETEXT = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        ExitMenu = new javax.swing.JMenu();
        AddProductMenu = new javax.swing.JMenu();
        SellProductMenu = new javax.swing.JMenu();
        StockMenu = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        MemberInfoItem = new javax.swing.JMenuItem();
        DueBillItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(108, 108, 121));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(153, 0, 153));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DUE PAYMENT ");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(580, 20, 470, 60);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 1370, 0);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 230, 1320, 360);

        AmountText.setBackground(new java.awt.Color(108, 108, 121));
        AmountText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AmountText.setForeground(new java.awt.Color(255, 255, 255));
        AmountText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(AmountText);
        AmountText.setBounds(250, 130, 230, 40);

        MemberNameText.setBackground(new java.awt.Color(108, 108, 121));
        MemberNameText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        MemberNameText.setForeground(new java.awt.Color(255, 255, 255));
        MemberNameText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        MemberNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberNameTextActionPerformed(evt);
            }
        });
        jPanel1.add(MemberNameText);
        MemberNameText.setBounds(20, 50, 460, 40);

        PhoneNumberText.setBackground(new java.awt.Color(108, 108, 121));
        PhoneNumberText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PhoneNumberText.setForeground(new java.awt.Color(255, 255, 255));
        PhoneNumberText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(PhoneNumberText);
        PhoneNumberText.setBounds(20, 130, 210, 40);

        AllDue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AllDue.setForeground(new java.awt.Color(0, 51, 204));
        AllDue.setText("ALL DUE");
        AllDue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AllDue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllDueActionPerformed(evt);
            }
        });
        jPanel1.add(AllDue);
        AllDue.setBounds(660, 180, 130, 40);

        DateChoose.setBorder(javax.swing.BorderFactory.createSoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
            (java.awt.Color)null,
            (java.awt.Color)null,
            (java.awt.Color)null,
            (java.awt.Color)null));
    DateChoose.setCalendarPreferredSize(new java.awt.Dimension(344, 216));
    DateChoose.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 14));
    jPanel1.add(DateChoose);
    DateChoose.setBounds(500, 50, 290, 40);

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(204, 204, 255));
    jLabel2.setText("PAID :");
    jPanel1.add(jLabel2);
    jLabel2.setBounds(20, 610, 70, 40);

    jLabel3.setBackground(new java.awt.Color(204, 204, 255));
    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(204, 204, 255));
    jLabel3.setText("DUE :");
    jPanel1.add(jLabel3);
    jLabel3.setBounds(460, 610, 50, 40);

    RepayTotal.setBackground(new java.awt.Color(108, 108, 121));
    RepayTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    RepayTotal.setForeground(new java.awt.Color(255, 255, 255));
    RepayTotal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel1.add(RepayTotal);
    RepayTotal.setBounds(90, 610, 360, 40);

    DueTotal.setBackground(new java.awt.Color(108, 108, 121));
    DueTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    DueTotal.setForeground(new java.awt.Color(255, 255, 255));
    DueTotal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel1.add(DueTotal);
    DueTotal.setBounds(980, 610, 360, 40);

    Due.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    Due.setForeground(new java.awt.Color(0, 51, 204));
    Due.setText("DUE");
    Due.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    Due.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DueActionPerformed(evt);
        }
    });
    jPanel1.add(Due);
    Due.setBounds(500, 130, 130, 40);

    AllPaid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    AllPaid.setForeground(new java.awt.Color(0, 51, 204));
    AllPaid.setText("ALL PAID");
    AllPaid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    AllPaid.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            AllPaidActionPerformed(evt);
        }
    });
    jPanel1.add(AllPaid);
    AllPaid.setBounds(500, 180, 130, 40);

    jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(204, 204, 255));
    jLabel4.setText("MEMBER NAME");
    jPanel1.add(jLabel4);
    jLabel4.setBounds(180, 10, 160, 30);

    jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel5.setForeground(new java.awt.Color(204, 204, 255));
    jLabel5.setText("ENTER AMOUNT");
    jPanel1.add(jLabel5);
    jLabel5.setBounds(280, 100, 170, 30);

    jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(204, 204, 255));
    jLabel6.setText("PHONE NUMBER");
    jPanel1.add(jLabel6);
    jLabel6.setBounds(50, 100, 170, 30);

    AddAmount1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    AddAmount1.setForeground(new java.awt.Color(0, 51, 204));
    AddAmount1.setText("ADD");
    AddAmount1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    AddAmount1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            AddAmount1ActionPerformed(evt);
        }
    });
    jPanel1.add(AddAmount1);
    AddAmount1.setBounds(20, 180, 130, 40);

    Repay.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    Repay.setForeground(new java.awt.Color(0, 51, 204));
    Repay.setText("REPAY");
    Repay.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    Repay.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            RepayActionPerformed(evt);
        }
    });
    jPanel1.add(Repay);
    Repay.setBounds(660, 130, 130, 40);

    jLabel7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 28)); // NOI18N
    jLabel7.setForeground(new java.awt.Color(204, 204, 255));
    jLabel7.setText("DUE TRANSITION HISTORY");
    jPanel1.add(jLabel7);
    jLabel7.setBounds(930, 20, 400, 80);

    jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/debit-card128.png"))); // NOI18N
    jPanel1.add(jLabel8);
    jLabel8.setBounds(1040, 80, 170, 130);

    DateSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    DateSearch.setForeground(new java.awt.Color(0, 51, 204));
    DateSearch.setText("SEARCH");
    DateSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    DateSearch.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DateSearchActionPerformed(evt);
        }
    });
    jPanel1.add(DateSearch);
    DateSearch.setBounds(800, 50, 110, 40);

    jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel9.setForeground(new java.awt.Color(204, 204, 255));
    jLabel9.setText("DUE TOTAL:");
    jPanel1.add(jLabel9);
    jLabel9.setBounds(870, 610, 108, 40);

    DUETEXT.setBackground(new java.awt.Color(108, 108, 121));
    DUETEXT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    DUETEXT.setForeground(new java.awt.Color(255, 255, 255));
    DUETEXT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    DUETEXT.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DUETEXTActionPerformed(evt);
        }
    });
    jPanel1.add(DUETEXT);
    DUETEXT.setBounds(520, 610, 340, 40);

    getContentPane().add(jPanel1);
    jPanel1.setBounds(0, 0, 1370, 730);

    jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuBar1.setAlignmentX(1.0F);
    jMenuBar1.setAutoscrolls(true);
    jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jMenuBar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jMenuBar1.setMargin(new java.awt.Insets(5, 5, 50, 50));

    ExitMenu.setBackground(new java.awt.Color(153, 153, 153));
    ExitMenu.setBorder(null);
    ExitMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Atel Dot Net\\Desktop\\IMAGE\\icon\\bb16.png")); // NOI18N
    ExitMenu.setText(" BACK");
    ExitMenu.setDelay(100);
    ExitMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    ExitMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    ExitMenu.setPreferredSize(new java.awt.Dimension(105, 19));
    ExitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ExitMenuMouseClicked(evt);
        }
    });
    ExitMenu.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            ExitMenuKeyPressed(evt);
        }
    });
    jMenuBar1.add(ExitMenu);

    AddProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    AddProductMenu.setBorder(null);
    AddProductMenu.setText("     ADD PRODUCT");
    AddProductMenu.setDelay(100);
    AddProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    AddProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    AddProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    AddProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            AddProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(AddProductMenu);

    SellProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    SellProductMenu.setBorder(null);
    SellProductMenu.setText("      SELL PRODUCT");
    SellProductMenu.setDelay(100);
    SellProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    SellProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    SellProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    SellProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            SellProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(SellProductMenu);

    StockMenu.setBackground(new java.awt.Color(153, 153, 153));
    StockMenu.setBorder(null);
    StockMenu.setText("            STOCK");
    StockMenu.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    StockMenu.setDelay(100);
    StockMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    StockMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    StockMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    StockMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            StockMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(StockMenu);

    jMenu6.setBackground(new java.awt.Color(153, 153, 153));
    jMenu6.setBorder(null);
    jMenu6.setText("          ACCOUNT");
    jMenu6.setDelay(100);
    jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu6.setMargin(new java.awt.Insets(0, 0, 0, 50));
    jMenu6.setPreferredSize(new java.awt.Dimension(150, 20));

    MemberInfoItem.setText("MEMBER INFO");
    MemberInfoItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    MemberInfoItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    MemberInfoItem.setPreferredSize(new java.awt.Dimension(150, 26));
    MemberInfoItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            MemberInfoItemMouseClicked(evt);
        }
    });
    MemberInfoItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            MemberInfoItemActionPerformed(evt);
        }
    });
    jMenu6.add(MemberInfoItem);

    DueBillItem.setText("DUE BILL");
    DueBillItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    DueBillItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    DueBillItem.setPreferredSize(new java.awt.Dimension(127, 26));
    DueBillItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            DueBillItemMouseClicked(evt);
        }
    });
    DueBillItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DueBillItemActionPerformed(evt);
        }
    });
    jMenu6.add(DueBillItem);
    jMenu6.add(jMenuItem1);

    jMenuBar1.add(jMenu6);

    jMenu1.setBackground(new java.awt.Color(153, 153, 153));
    jMenu1.setText("        REFRESH");
    jMenu1.setActionCommand("    REFRESH");
    jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jMenu1MouseClicked(evt);
        }
    });
    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    setSize(new java.awt.Dimension(1388, 771));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DueActionPerformed
        // TODO add your handling code here:
        MemberNameText.setText("");
        FetchData_Total();
        Member_Name_Set();
        
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL WHERE PhoneNumber='"+PhoneNumberText.getText()+"'");
            
            String MemberName="", Due_Date="";
            float Bill=0;
             String admin="";
            
            
           String[] columnNames = {"Serial", "DUE", "DUE DATE","INVOICE", "ADMIN"};
           
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
        
            int i=1;
            float Intotal=0;
            float TotalPrice=0;
          //  float INTotalPrice=0;

      
            
            
            while (resultSet.next()) {
              
              admin=resultSet.getString("EntryBy");
              IsExist=true;
              int INVOICE=resultSet.getInt("Invoice");
              MemberName=resultSet.getString("MemberName");
              Due_Date=resultSet.getString("DueDate");
              Bill=resultSet.getFloat("Bill");
              
              
               Intotal +=Bill;
               
               model.addRow(new Object[]{i, Bill, Due_Date,INVOICE, admin});
               i++;
               
           
            }
            
         //  MemberNameText.setText(""+MemberName);
          // DueTotal.setText(""+Intotal);
        //   AmountText.setText("");
           
           if(IsExist==false)
           {
               JOptionPane.showMessageDialog(null, "NO MEMBER FOUND");
           }
           
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        
    }//GEN-LAST:event_DueActionPerformed

    public void Member_Name_Set() {
        // String phone= PhoneNumberText.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT MemberName FROM MEMBER WHERE PhoneNumber='" + PhoneNumberText.getText() + "'");
            String name = "";
            while (resultSet.next()) {
                name = resultSet.getString("MemberName");

            }

            MemberNameText.setText("" + name);
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    private void AddAmount1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAmount1ActionPerformed
        // TODO add your handling code here:
         MemberExist();
       
         if(IsExist==false || Float.parseFloat(AmountText.getText())<0)
           {
               if(IsExist==false)
               {
               JOptionPane.showMessageDialog(null, "NO MEMBER FOUND");
               }else if(Float.parseFloat(AmountText.getText())<0)
               {
                    JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID AMOUNT");
               }
           }
         else
         {
        
         try
         {
          
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;user=sa;password=123456";
            Connection con1 = DriverManager.getConnection(url);
           // Connection con1 = DriverManager.getConnection(url);
           
             String sql="Insert into DUEREPAY"
                    +"(PhoneNumber, Repay, PayDate, EntryBy)"
                    +"values(?, ?, ?, ?)";
            
            PreparedStatement pst = con1.prepareStatement(sql);
            
            pst.setString(1, PhoneNumberText.getText().toString());
            String Temp1=AmountText.getText();
            float Amount1=0;
            Amount1=Float.parseFloat(Temp1);
            
            pst.setFloat(2, Amount1);
            pst.setString(3, DateChoose.getText());
             pst.setString(4, Admin);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "SUCCESSFULLY ADDED");
            
            RepayData();
            FetchData_Total();
            
            AmountText.setText("");
           
            IsExist=false;
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
      }
      
    }//GEN-LAST:event_AddAmount1ActionPerformed

    private void AllPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllPaidActionPerformed
        // TODO add your handling code here:
        RepayTotal.setText("");
        DueTotal.setText("");
        MemberNameText.setText("");
        PhoneNumberText.setText("");
        AmountText.setText("");
        DUETEXT.setText("");
        
        All_DUE();
        All_Paid();
        
       // RepayTotal.setText("");
       DUETEXT.setText(""+(DUE-PAID));
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEREPAY");
            
            String MemberName="", Pay_Date="";
            float Bill=0;
            String Phone="";
            
            
           String[] columnNames = {"Serial","PHONE NUMBER", "PAID", "PAY DATE"};
           
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
        
            int i=1;
            float Intotal=0;
            float TotalPrice=0;
          //  float INTotalPrice=0;

      
            
            
            while (resultSet.next()) {
              
              
              IsExist=true;
              Phone=resultSet.getString("PhoneNumber");
              Pay_Date=resultSet.getString("PayDate");
              Bill=resultSet.getFloat("Repay");
              
              
               Intotal +=Bill;
               
               model.addRow(new Object[]{i,Phone, Bill, Pay_Date});
               i++;
               
           
            }
            
          // MemberNameText.setText(""+MemberName);
        //   RepayTotal.setText(""+Intotal);
           
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        
       
    }//GEN-LAST:event_AllPaidActionPerformed

    private void MemberNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MemberNameTextActionPerformed

    private void RepayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepayActionPerformed
        // TODO add your handling code here
         DueTotal.setText("");
         RepayTotal.setText("");
         MemberNameText.setText("");
         MemberExist();
         RepayData();
         FetchData_Total();
         IsExist=false;
    }//GEN-LAST:event_RepayActionPerformed

    private void AllDueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllDueActionPerformed
        // TODO add your handling code here:
        
        RepayTotal.setText("");
        DueTotal.setText("");
        MemberNameText.setText("");
        PhoneNumberText.setText("");
        AmountText.setText("");
        DUETEXT.setText("");
                
        All_DUE();
        All_Paid();
        
       DUETEXT.setText(""+(DUE-PAID));
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL");
            
            String MemberName="", Due_Date="";
            String Phone="";
            float Bill=0;
           
           String admin="";
            
           String[] columnNames = {"Serial","PHONE NUMBER","NAME", "DUE", "DUE DATE","INVOICE", "ADMIN"};
           
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
        
            int i=1;
            float Intotal=0;
            float TotalPrice=0;
          //  float INTotalPrice=0;

      
            
            
            while (resultSet.next()) {
              
              
              IsExist=true;
              MemberName=resultSet.getString("MemberName");
              admin=resultSet.getString("EntryBy");
              Due_Date=resultSet.getString("DueDate");
              Bill=resultSet.getFloat("Bill");
              Phone=resultSet.getString("PhoneNumber");
              int INVOICE =resultSet.getInt("Invoice");
               Intotal +=Bill;
               
               model.addRow(new Object[]{i,Phone,MemberName, Bill, Due_Date, INVOICE, admin});
               i++;
               
           
            }
            
      //     MemberNameText.setText(""+MemberName);
          // DueTotal.setText(""+Intotal);
        //   AmountText.setText("");
           
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_AllDueActionPerformed

    private void DateSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateSearchActionPerformed
        MemberNameText.setText("");       
        DateFormate();
        DUETEXT.setText("");
         float Intotal=0, Intotal1=0;
        // DATE WITH DUE
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL WHERE DueDate='"+DATE+"'");
            
            String MemberName="", Due_Date="";
            float Bill=0;
           
       
        
            int i=1;
           
            float TotalPrice=0;
            String Phone="";
            String admin="";
          //  float INTotalPrice=0;
          
          
             
           String[] columnNames = {"Serial","PHONE NUMBER","NAME", "DUE", "DUE DATE", "ADMIN"};
           
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
        
        
            
            while (resultSet.next()) {
              
              
              IsExist=true;
              MemberName=resultSet.getString("MemberName");
              admin=resultSet.getString("EntryBy");
              Due_Date=resultSet.getString("DueDate");
              Bill=resultSet.getFloat("Bill");
              Phone=resultSet.getString("PhoneNumber");
             
               Intotal +=Bill;
               
               model.addRow(new Object[]{i,Phone,MemberName, Bill, Due_Date, admin});
               i++;
               
           
            }

         
      //     MemberNameText.setText(""+MemberName);
           DueTotal.setText(""+Intotal);
        //   AmountText.setText("");
           
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        
        // DATE WITH PAID
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEREPAY WHERE PayDate='"+DATE+"'");
            
          //  String MemberName="", Pay_Date="";
            float Bill=0;
           
        
            int i=1;
         //   float Intotal1=0;
            float TotalPrice=0;
       
            while (resultSet.next()) {
              
              
              IsExist=true;
            //  MemberName=resultSet.getString("MemberName");
           //   Pay_Date=resultSet.getString("PayDate");
              Bill=resultSet.getFloat("Repay");
              
              
               Intotal1 +=Bill;
          
            }
            
          // MemberNameText.setText(""+MemberName);
           RepayTotal.setText(""+(Intotal1));
           
        
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        DUETEXT.setText(""+(Intotal-Intotal1));
        
    }//GEN-LAST:event_DateSearchActionPerformed

    private void DUETEXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DUETEXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DUETEXTActionPerformed

    private void ExitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMenuMouseClicked
        // TODO add your handling code here:
         HomePage obj=new HomePage();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ExitMenuMouseClicked

    private void ExitMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitMenuKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_ExitMenuKeyPressed

    private void AddProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddProductMenuMouseClicked
        // TODO add your handling code here:
        AddProduct obj=new AddProduct();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_AddProductMenuMouseClicked

    private void SellProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SellProductMenuMouseClicked
        // TODO add your handling code here:
        SellProduct obj=new SellProduct();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SellProductMenuMouseClicked

    private void StockMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockMenuMouseClicked
        // TODO add your handling code here:
        StockInfo obj=new StockInfo();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_StockMenuMouseClicked

    private void MemberInfoItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MemberInfoItemMouseClicked
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemMouseClicked

    private void MemberInfoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberInfoItemActionPerformed
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemActionPerformed

    private void DueBillItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DueBillItemMouseClicked
        // TODO add your handling code here:
      //  DueBill obj=new DueBill();
       // obj.setVisible(true);
    }//GEN-LAST:event_DueBillItemMouseClicked

    private void DueBillItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DueBillItemActionPerformed
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenu1MouseClicked

    public void FetchData_Total()
    {
        DueTotal.setText("");
        RepayTotal.setText("");
        DUETEXT.setText("");
        
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            Statement statement1 = connection.createStatement();
            
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL WHERE PhoneNumber='"+PhoneNumberText.getText()+"'");
            
             ResultSet resultSet1 = statement1
                    .executeQuery("SELECT * FROM DUEREPAY WHERE PhoneNumber='"+PhoneNumberText.getText()+"'");
             
            String MemberName="", Due_Date="";
            float Bill=0;
           
        
            float Intotal=0;
            float TotalPrice=0;
         
            while (resultSet.next()) {
              
              
              IsExist=true;
          //    MemberName=resultSet.getString("MemberName");
           //   Due_Date=resultSet.getString("DueDate");
              Bill=resultSet.getFloat("Bill");
              Intotal +=Bill;
         
            }
            
            float Bil_Pay=0;
            float total1=0;
            
            while (resultSet1.next()) {
            
          //    IsExist=true;
              Bil_Pay=resultSet1.getFloat("Repay");
              total1 +=Bil_Pay;
             
           
            }
            
         
           DueTotal.setText(""+Intotal);
           RepayTotal.setText(""+total1);
           AmountText.setText("");
           DUETEXT.setText(""+(Intotal-total1));
           
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
     public void RepayData()
    {
        Member_Name_Set();
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEREPAY WHERE PhoneNumber='"+PhoneNumberText.getText()+"'");
            
            String MemberName="", Pay_Date="";
            float Bill=0;
           
            
            String admin="";
           String[] columnNames = {"Serial", "PAID", "PAY DATE","ADMIN"};
           
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
        
            int i=1;
            float Intotal=0;
            float TotalPrice=0;
          //  float INTotalPrice=0;

      
            
            
            while (resultSet.next()) {
              
              
              IsExist=true;
              admin=resultSet.getString("EntryBy");
              Pay_Date=resultSet.getString("PayDate");
              Bill=resultSet.getFloat("Repay");
              
              
               Intotal +=Bill;
               
               model.addRow(new Object[]{i, Bill, Pay_Date, admin});
               i++;
               
           
            }
            
          // MemberNameText.setText(""+MemberName);
           RepayTotal.setText(""+Intotal);
           
           if(IsExist==false)
           {
               JOptionPane.showMessageDialog(null, "NO MEMBER FOUND");
           }
           
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     
     public void MemberExist()
     {
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL WHERE PhoneNumber='"+PhoneNumberText.getText()+"'");
            
          
        
            while (resultSet.next()) {
              
              IsExist=true;
         
            }
            
     
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
     }
     
     
     public void All_Paid()
     {
          PAID=0;
           try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEREPAY");
            
          //  String MemberName="", Pay_Date="";
            float Bill=0;
           
        
            int i=1;
            float Intotal1=0;
            float TotalPrice=0;
       
            while (resultSet.next()) {
              
              
              IsExist=true;
            //  MemberName=resultSet.getString("MemberName");
           //   Pay_Date=resultSet.getString("PayDate");
              Bill=resultSet.getFloat("Repay");
              
              
               Intotal1 +=Bill;
          
            }
            
          // MemberNameText.setText(""+MemberName);
          
           RepayTotal.setText(""+Intotal1);
           
           PAID=Intotal1;
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

     }
     public void All_DUE()
     {
         DUE=0;
           try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
           Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT * FROM DUEALL");
            
            String MemberName="", Due_Date="";
            float Bill=0;
           
            
            
          // String[] columnNames = {"Serial", "DUE", "DUE DATE"};
           
        //   DefaultTableModel model = new DefaultTableModel();
         //  model.setColumnIdentifiers(columnNames);
          
        //   jTable1.setModel(model);
            
        
            int i=1;
            float Intotal=0;
            float TotalPrice=0;
          //  float INTotalPrice=0;

      
            
            
            while (resultSet.next()) {
              
              
              IsExist=true;
             // MemberName=resultSet.getString("MemberName");
           //   Due_Date=resultSet.getString("DueDate");
              Bill=resultSet.getFloat("Bill");
              
              
               Intotal +=Bill;
               
            //   model.addRow(new Object[]{i, Bill, Due_Date});
            //   i++;
               
           
            }
            
      //     MemberNameText.setText(""+MemberName);
           DueTotal.setText(""+Intotal);
        //   AmountText.setText("");
           DUE=Intotal;
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

     }
   
     public void DateFormate()
     {
            String from=DateChoose.getText();
            String month1="";
            String date1="";
            String year1="";
           
            int j=0, k=0;
            
            for(int i=0; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    ++i;
                    j=i;
                    break;
                }
                month1 +=c;
               
            }
            
             for(int i=j; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    ++i;
                    k=i;
                    break;
                }
                date1 +=c;
               
            }
            
             for(int i=k; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    
                    break;
                }
                year1 +=c;
               
            }
              
             DATE="20"+year1+"-"+month1+"-"+date1;
             
            
     }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DueBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DueBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DueBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DueBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DueBill().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAmount1;
    private javax.swing.JMenu AddProductMenu;
    private javax.swing.JButton AllDue;
    private javax.swing.JButton AllPaid;
    private javax.swing.JTextField AmountText;
    private javax.swing.JTextField DUETEXT;
    private datechooser.beans.DateChooserCombo DateChoose;
    private javax.swing.JButton DateSearch;
    private javax.swing.JButton Due;
    private javax.swing.JMenuItem DueBillItem;
    private javax.swing.JTextField DueTotal;
    private javax.swing.JMenu ExitMenu;
    private javax.swing.JMenuItem MemberInfoItem;
    private javax.swing.JTextField MemberNameText;
    private javax.swing.JTextField PhoneNumberText;
    private javax.swing.JButton Repay;
    private javax.swing.JTextField RepayTotal;
    private javax.swing.JMenu SellProductMenu;
    private javax.swing.JMenu StockMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
