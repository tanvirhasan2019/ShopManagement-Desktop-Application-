package shopmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Atel Dot Net
 */
public class MemberAccount extends javax.swing.JFrame {

    private String PhoneNumber;
    String startingDate, endingDate;

    String[] columnNames = {"Serial", "ProductId", "Product Name", "Quantity", "SELLING PRICE", "SELLING DATE", "SOLD BY"};
    DefaultTableModel model = new DefaultTableModel();

    StringBuffer strBuffer = new StringBuffer();
    String  Shop_Name="",Shop_Address="",Shop_Phone="",Shop_Email="";
    private ImageIcon icon;

    /**
     * Creates new form MemberAccount
     */

    public MemberAccount() {
        initComponents();

        SetIcon();
        model.setColumnIdentifiers(columnNames);
        jTable1.setModel(model);

    }
    
      public void SetIcon()
    {
        icon=new ImageIcon(getClass().getResource("shop32.png"));
        this.setIconImage(icon.getImage());
    }

    public void PhoneNumber(String PhoneNumber) {
        this.PhoneNumber = PhoneNumber;
        System.out.println(PhoneNumber);
        MemberExist(PhoneNumber);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NoMemberText = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CompanyNameText = new javax.swing.JTextField();
        MemberNameText = new javax.swing.JTextField();
        AddressText = new javax.swing.JTextField();
        EmailText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        PhoneNumberText = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        SearchByInvoice = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ToDate = new datechooser.beans.DateChooserCombo();
        jLabel3 = new javax.swing.JLabel();
        FromDate = new datechooser.beans.DateChooserCombo();
        PrintButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        InvoiceNumberText = new javax.swing.JTextField();
        SearchByDate1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        phoneGetText = new javax.swing.JTextField();
        SearchByPhone = new javax.swing.JButton();
        DueBill = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        ExitMenu = new javax.swing.JMenu();
        AddProductMenu = new javax.swing.JMenu();
        SellProductMenu = new javax.swing.JMenu();
        StockMenu = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        MemberInfoItem = new javax.swing.JMenuItem();
        DueBillItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("MEMBER INFORMATION");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(430, 10, 620, 50);

        NoMemberText.setBackground(new java.awt.Color(153, 153, 153));
        NoMemberText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        NoMemberText.setForeground(new java.awt.Color(204, 0, 0));
        jPanel1.add(NoMemberText);
        NoMemberText.setBounds(70, 30, 330, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1370, 60);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("PHONE NUMBER        :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 250, 210, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("ADDRESS                     :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 290, 210, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("EMAIL                          :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 330, 210, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("TO DATE                       :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 450, 210, 30);

        CompanyNameText.setBackground(new java.awt.Color(204, 204, 255));
        CompanyNameText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        CompanyNameText.setForeground(new java.awt.Color(51, 51, 51));
        CompanyNameText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(CompanyNameText);
        CompanyNameText.setBounds(220, 370, 340, 30);

        MemberNameText.setBackground(new java.awt.Color(204, 204, 255));
        MemberNameText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        MemberNameText.setForeground(new java.awt.Color(51, 51, 51));
        MemberNameText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(MemberNameText);
        MemberNameText.setBounds(220, 210, 340, 30);

        AddressText.setBackground(new java.awt.Color(204, 204, 255));
        AddressText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        AddressText.setForeground(new java.awt.Color(51, 51, 51));
        AddressText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(AddressText);
        AddressText.setBounds(220, 290, 340, 30);

        EmailText.setBackground(new java.awt.Color(204, 204, 255));
        EmailText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        EmailText.setForeground(new java.awt.Color(51, 51, 51));
        EmailText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(EmailText);
        EmailText.setBounds(220, 330, 340, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("INVOICE NUMBER     :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 150, 210, 40);

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(51, 51, 51));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setRowHeight(25);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(570, 150, 790, 480);

        PhoneNumberText.setBackground(new java.awt.Color(204, 204, 255));
        PhoneNumberText.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        PhoneNumberText.setForeground(new java.awt.Color(51, 51, 51));
        PhoneNumberText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(PhoneNumberText);
        PhoneNumberText.setBounds(220, 250, 340, 30);

        jPanel5.setBackground(new java.awt.Color(153, 153, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("SOLD PRODUCTS");
        jPanel5.add(jLabel8);
        jLabel8.setBounds(360, 0, 220, 30);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(570, 90, 790, 30);

        SearchByInvoice.setBackground(new java.awt.Color(153, 153, 255));
        SearchByInvoice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SearchByInvoice.setForeground(new java.awt.Color(51, 51, 51));
        SearchByInvoice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/search.png"))); // NOI18N
        SearchByInvoice.setText("SEARCH");
        SearchByInvoice.setBorder(null);
        SearchByInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByInvoiceActionPerformed(evt);
            }
        });
        getContentPane().add(SearchByInvoice);
        SearchByInvoice.setBounds(440, 150, 120, 40);

        UpdateButton.setBackground(new java.awt.Color(153, 153, 255));
        UpdateButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        UpdateButton.setForeground(new java.awt.Color(0, 0, 204));
        UpdateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/UPDATE32.png"))); // NOI18N
        UpdateButton.setText("UPDATE");
        UpdateButton.setBorder(null);
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(UpdateButton);
        UpdateButton.setBounds(220, 570, 150, 60);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("COMPANY NAME        :");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 370, 210, 30);

        ToDate.setCalendarBackground(new java.awt.Color(204, 204, 255));
        ToDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED,
            (java.awt.Color)null,
            (java.awt.Color)null,
            (java.awt.Color)null,
            (java.awt.Color)null));
    ToDate.setCalendarPreferredSize(new java.awt.Dimension(400, 200));
    getContentPane().add(ToDate);
    ToDate.setBounds(220, 450, 340, 30);

    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(102, 102, 102));
    jLabel3.setText("FROM DATE                 :");
    getContentPane().add(jLabel3);
    jLabel3.setBounds(10, 410, 210, 30);

    FromDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null));
FromDate.setCalendarPreferredSize(new java.awt.Dimension(400, 200));
getContentPane().add(FromDate);
FromDate.setBounds(220, 410, 340, 30);

PrintButton.setBackground(new java.awt.Color(153, 153, 255));
PrintButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
PrintButton.setForeground(new java.awt.Color(0, 0, 204));
PrintButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/print_32.png"))); // NOI18N
PrintButton.setText(" PRINT");
PrintButton.setBorder(null);
PrintButton.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        PrintButtonActionPerformed(evt);
    }
    });
    getContentPane().add(PrintButton);
    PrintButton.setBounds(410, 570, 150, 60);

    jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel9.setForeground(new java.awt.Color(102, 102, 102));
    jLabel9.setText("MEMBER NAME          :");
    getContentPane().add(jLabel9);
    jLabel9.setBounds(10, 210, 210, 30);

    InvoiceNumberText.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
    InvoiceNumberText.setForeground(new java.awt.Color(0, 51, 153));
    InvoiceNumberText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    InvoiceNumberText.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            InvoiceNumberTextActionPerformed(evt);
        }
    });
    getContentPane().add(InvoiceNumberText);
    InvoiceNumberText.setBounds(220, 150, 210, 40);

    SearchByDate1.setBackground(new java.awt.Color(153, 153, 255));
    SearchByDate1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
    SearchByDate1.setForeground(new java.awt.Color(0, 0, 204));
    SearchByDate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/search.png"))); // NOI18N
    SearchByDate1.setText("  DATE");
    SearchByDate1.setBorder(null);
    SearchByDate1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            SearchByDate1ActionPerformed(evt);
        }
    });
    getContentPane().add(SearchByDate1);
    SearchByDate1.setBounds(220, 500, 150, 60);

    jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel11.setForeground(new java.awt.Color(102, 102, 102));
    jLabel11.setText("PHONE NUMBER        :");
    getContentPane().add(jLabel11);
    jLabel11.setBounds(10, 90, 210, 40);

    phoneGetText.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
    phoneGetText.setForeground(new java.awt.Color(0, 51, 153));
    phoneGetText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    getContentPane().add(phoneGetText);
    phoneGetText.setBounds(220, 90, 210, 40);

    SearchByPhone.setBackground(new java.awt.Color(153, 153, 255));
    SearchByPhone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    SearchByPhone.setForeground(new java.awt.Color(51, 51, 51));
    SearchByPhone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/search.png"))); // NOI18N
    SearchByPhone.setText("SEARCH");
    SearchByPhone.setBorder(null);
    SearchByPhone.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            SearchByPhoneActionPerformed(evt);
        }
    });
    getContentPane().add(SearchByPhone);
    SearchByPhone.setBounds(440, 90, 120, 40);

    DueBill.setBackground(new java.awt.Color(153, 153, 255));
    DueBill.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
    DueBill.setForeground(new java.awt.Color(0, 0, 204));
    DueBill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/due32.png"))); // NOI18N
    DueBill.setText(" DUE BILL");
    DueBill.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DueBillActionPerformed(evt);
        }
    });
    getContentPane().add(DueBill);
    DueBill.setBounds(410, 500, 150, 60);

    jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuBar1.setAlignmentX(1.0F);
    jMenuBar1.setAutoscrolls(true);
    jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jMenuBar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jMenuBar1.setMargin(new java.awt.Insets(5, 5, 50, 50));

    ExitMenu.setBackground(new java.awt.Color(153, 153, 153));
    ExitMenu.setBorder(null);
    ExitMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Atel Dot Net\\Desktop\\IMAGE\\icon\\bb16.png")); // NOI18N
    ExitMenu.setText("BACK");
    ExitMenu.setDelay(100);
    ExitMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    ExitMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    ExitMenu.setPreferredSize(new java.awt.Dimension(105, 19));
    ExitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ExitMenuMouseClicked(evt);
        }
    });
    ExitMenu.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            ExitMenuKeyPressed(evt);
        }
    });
    jMenuBar1.add(ExitMenu);

    AddProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    AddProductMenu.setBorder(null);
    AddProductMenu.setText("     ADD PRODUCT");
    AddProductMenu.setDelay(100);
    AddProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    AddProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    AddProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    AddProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            AddProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(AddProductMenu);

    SellProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    SellProductMenu.setBorder(null);
    SellProductMenu.setText("      SELL PRODUCT");
    SellProductMenu.setDelay(100);
    SellProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    SellProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    SellProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    SellProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            SellProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(SellProductMenu);

    StockMenu.setBackground(new java.awt.Color(153, 153, 153));
    StockMenu.setBorder(null);
    StockMenu.setText("            STOCK");
    StockMenu.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    StockMenu.setDelay(100);
    StockMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    StockMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    StockMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    StockMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            StockMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(StockMenu);

    jMenu6.setBackground(new java.awt.Color(153, 153, 153));
    jMenu6.setBorder(null);
    jMenu6.setText("          ACCOUNT");
    jMenu6.setDelay(100);
    jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu6.setMargin(new java.awt.Insets(0, 0, 0, 50));
    jMenu6.setPreferredSize(new java.awt.Dimension(150, 20));

    MemberInfoItem.setText("MEMBER INFO");
    MemberInfoItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    MemberInfoItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    MemberInfoItem.setPreferredSize(new java.awt.Dimension(150, 26));
    MemberInfoItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            MemberInfoItemMouseClicked(evt);
        }
    });
    MemberInfoItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            MemberInfoItemActionPerformed(evt);
        }
    });
    jMenu6.add(MemberInfoItem);

    DueBillItem.setText("DUE BILL");
    DueBillItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    DueBillItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    DueBillItem.setPreferredSize(new java.awt.Dimension(127, 26));
    DueBillItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            DueBillItemMouseClicked(evt);
        }
    });
    DueBillItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DueBillItemActionPerformed(evt);
        }
    });
    jMenu6.add(DueBillItem);
    jMenu6.add(jMenuItem1);

    jMenuBar1.add(jMenu6);

    jMenu1.setBackground(new java.awt.Color(153, 153, 153));
    jMenu1.setText("        REFRESH");
    jMenu1.setActionCommand("    REFRESH");
    jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jMenu1MouseClicked(evt);
        }
    });
    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    setSize(new java.awt.Dimension(1386, 773));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void InvoiceNumberTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceNumberTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceNumberTextActionPerformed

    private void SearchByPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByPhoneActionPerformed
        // TODO add your handling code here:
        //  PhoneNumber(phoneGetText.getText().toString());
        MemberNameText.setText("");
        PhoneNumberText.setText("");
        AddressText.setText("");
        EmailText.setText("");
        CompanyNameText.setText("");

        model.setRowCount(0);
        MemberExist(phoneGetText.getText().toString());
        InvoiceNumberText.setText("");
    }//GEN-LAST:event_SearchByPhoneActionPerformed

    private void SearchByInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByInvoiceActionPerformed
        // TODO add your handling code here:
        MemberNameText.setText("");
        PhoneNumberText.setText("");
        AddressText.setText("");
        EmailText.setText("");
        CompanyNameText.setText("");
        
        model.setRowCount(0);
        phoneGetText.setText("");
        InvoiceExist(InvoiceNumberText.getText().toString());
    }//GEN-LAST:event_SearchByInvoiceActionPerformed

    private void SearchByDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByDate1ActionPerformed
        // TODO add your handling code here
        
         MemberNameText.setText("");
        PhoneNumberText.setText("");
        AddressText.setText("");
        EmailText.setText("");
        CompanyNameText.setText("");
        
        phoneGetText.setText("");
        InvoiceNumberText.setText("");
        model.setRowCount(0);
        String phone = JOptionPane.showInputDialog(null, "ENTER MEMBER PHONE NUMBER");
        System.out.println(phone);
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

            DateFormate();

            Statement statement = connection.createStatement();
            String sql = "SELECT * FROM SOLD_PRODUCT S\n"
                    + "WHERE S.SellingDate>='" + startingDate + "' AND S.SellingDate<='" + endingDate + "' AND S.PhoneNumber='" + phone + "'";
            ResultSet resultSet = statement
                    .executeQuery(sql);

            //  resultSet.setString(1, fromDate.getText());
            //  String sql="SELECT * FROM AdmissionForm WHERE MemberId=?";
            int x = 1;
            //  float StockIntotal=0;

            while (resultSet.next()) {

                String ProductName = resultSet.getString("ProductName");
                String ProductId = resultSet.getString("ProductId");
                String SellingDate = resultSet.getString("SellingDate");
                int Quantity = resultSet.getInt("ProductQuantity");
                Float SellPrice = resultSet.getFloat("SellingPrice");
                String soldby=resultSet.getString("SoldBy");
                
                model.addRow(new Object[]{x, ProductId, ProductName, Quantity, SellPrice, SellingDate, soldby});

                x++;

            }
            connection.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_SearchByDate1ActionPerformed

    private void PrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintButtonActionPerformed
        // TODO add your handling code here:

        strBuffer.delete(0, strBuffer.length());

        ShopInfo();
        
        strBuffer.append("<table style=\"width:100%\">\n"
                + "  <tr>\n"
                + "    <th>"+Shop_Name+"</th>\n"
                + "  </tr>\n"
                + "  \n"
                + "   <tr>\n"
                + "    <th>"+Shop_Address+"</th>\n"
                + "  </tr>\n"
                + "  \n"
                + "   <tr>\n"
                + "    <th>"+Shop_Phone+"</th>\n"
                + "  </tr>\n"
                + "   <tr>\n"
                + "    <th>"+Shop_Email+"</th>\n"
                + "  </tr>\n"
                + "  \n"
                + "<tr></tr><tr></tr></table>");

        strBuffer.append("\n<table border = \"1\" cellpadding = \"5\" cellspacing = \"5\" style=\"width:100%; border: 1px solid black;\">\n"
                + "  <tr>\n"
                + "     <td>PRODUCTID</td> \n"
                + "     <td>PRODUCTNAME</td>\n"
                + "     <td>QUANTITY</td>\n"
                + "     <td>SELLING PRICE</td>\n"
                + "     <td>DATE</td>\n"
                + "     <td>TOTAL</td>\n"
                + "    \n"
                + "  </tr>");

        int serial = 0;
        float subTotal = 0;
        float Intotal = 0;

        for (int count = 0; count < model.getRowCount(); count++) {
            String productID = model.getValueAt(count, 1).toString();
            String productName = model.getValueAt(count, 2).toString();
            String quantity1 = model.getValueAt(count, 3).toString();
            String sellprice = model.getValueAt(count, 4).toString();
            String selldate = model.getValueAt(count, 5).toString();
            System.out.println(productID);

            int x = Integer.parseInt(quantity1);
            float y = Float.parseFloat(sellprice);

            subTotal = x * y;
            Intotal = subTotal + Intotal;

            strBuffer.append(" <tr>\n"
                    + "    <td>" + productID + "</td>\n"
                    + "    <td>" + productName + "</td>\n"
                    + "    <td>" + quantity1 + "</td>\n"
                    + "    <td>" + sellprice + "</td>\n"
                    + "    <td>" + selldate + "</td>\n"
                    + "    <td>" + subTotal + "</td>\n"
                    + "  </tr>");

            subTotal = 0;

        }

      
        strBuffer.append("</table>");

        strBuffer.append("<table style=\"width:100%\">\n"
                + "  <tr>\n"
                + "     <td align=\"right\">TOTAL PRICE : " + Intotal + "</td>\n"
                + "  </tr>\n"
                + "\n"
                + "</table>");

        strBuffer.append("\n\n<table style=\"width:100%\">\n"
                + "  <tr>\n"
                + "  <tr>\n"
                + "    <th>WELCOME FOR COMING </th>\n"
                + "   </tr>\n"
                + "  </tr>\n"
                + " \n"
                + "</table>");
        // jTextPane1.setText(strBuffer.toString());

        PrintMember obj = new PrintMember();
        obj.PrintString(strBuffer.toString());
        obj.setVisible(true);

    }//GEN-LAST:event_PrintButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Shopmanagement;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);

            String sql = "UPDATE MEMBER SET PhoneNumber='"+PhoneNumberText.getText()+"',MemberName='"+MemberNameText.getText()+"',Email='"+EmailText.getText()+"',Address='"+AddressText.getText()+"', CompanyName='"+CompanyNameText.getText()+"' WHERE PhoneNumber='"+PhoneNumberText.getText()+"'";
            PreparedStatement pst = con.prepareStatement(sql);
            //   pst.setString(1, UserText.getText().toString());
            //  pst.setString(2, PasswordText.getText().toString());
            pst.executeUpdate();
            int x = 0;
           JOptionPane.showMessageDialog(null, "UPDATED MEMBER SUCCESSFULLY");
           con.close();
        }catch(Exception e)
        {
             JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void DueBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DueBillActionPerformed
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_DueBillActionPerformed

    private void ExitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMenuMouseClicked
        // TODO add your handling code here:
         HomePage obj=new HomePage();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ExitMenuMouseClicked

    private void ExitMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitMenuKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_ExitMenuKeyPressed

    private void AddProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddProductMenuMouseClicked
        // TODO add your handling code here:
        AddProduct obj=new AddProduct();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_AddProductMenuMouseClicked

    private void SellProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SellProductMenuMouseClicked
        // TODO add your handling code here:
        SellProduct obj=new SellProduct();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SellProductMenuMouseClicked

    private void StockMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockMenuMouseClicked
        // TODO add your handling code here:
        StockInfo obj=new StockInfo();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_StockMenuMouseClicked

    private void MemberInfoItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MemberInfoItemMouseClicked
        // TODO add your handling code here:
     //   MemberAccount obj=new MemberAccount();
        //obj.setVisible(true);
    }//GEN-LAST:event_MemberInfoItemMouseClicked

    private void MemberInfoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberInfoItemActionPerformed
        // TODO add your handling code here:
      //  MemberAccount obj=new MemberAccount();
      //  obj.setVisible(true);
    }//GEN-LAST:event_MemberInfoItemActionPerformed

    private void DueBillItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DueBillItemMouseClicked
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemMouseClicked

    private void DueBillItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DueBillItemActionPerformed
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public void MemberExist(String PhoneNumber) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Shopmanagement;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);

            String sql = "Select * from SOLD_PRODUCT where PhoneNumber=" + PhoneNumber;
            PreparedStatement pst = con.prepareStatement(sql);
            //   pst.setString(1, UserText.getText().toString());
            //  pst.setString(2, PasswordText.getText().toString());
            ResultSet rs = pst.executeQuery();
            int x = 1;

           
            while (rs.next()) {
                String ProductName = rs.getString("ProductName");
                String ProductId = rs.getString("ProductId");
                String SellingDate = rs.getString("SellingDate");
                int Quantity = rs.getInt("ProductQuantity");
                Float SellPrice = rs.getFloat("SellingPrice");
                String soldby=rs.getString("SoldBy");
                
                model.addRow(new Object[]{x, ProductId, ProductName, Quantity, SellPrice, SellingDate, soldby});
                MemberInfo(PhoneNumber);
                x++;
            }
            if (x == 0) {
                // NoMemberText.setText("NO MEMBER FOUND;"
                JOptionPane.showMessageDialog(null, "INVALID MEMBER");
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void MemberInfo(String phone) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Shopmanagement;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);

            String sql = "Select * from MEMBER where PhoneNumber='"+phone+"'";
            PreparedStatement pst = con.prepareStatement(sql);
            //   pst.setString(1, UserText.getText().toString());
            //  pst.setString(2, PasswordText.getText().toString());
            ResultSet rs = pst.executeQuery();
            int x = 0;

            while (rs.next()) {

                String Name = rs.getString("MemberName");
                String Phone = rs.getString("PhoneNumber");
                String Address = rs.getString("Address");
                String email = rs.getString("Email");
                String company = rs.getString("CompanyName");

                MemberNameText.setText(Name);
                PhoneNumberText.setText(Phone);
                AddressText.setText(Address);
                EmailText.setText(email);
                CompanyNameText.setText(company);

                x = 1;

            }
            if (x == 0) {
                // NoMemberText.setText("NO MEMBER FOUND;"
                JOptionPane.showMessageDialog(null, "INVALID MEMBER");
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void InvoiceExist(String invoice) {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Shopmanagement;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);
            String sql = "Select * from SOLD_PRODUCT where InvoiceID='" + invoice+"'";

           // String sql2 = "Select * from MEMBER where PhoneNumber=" + invoice;
            PreparedStatement pst = con.prepareStatement(sql);
            //   pst.setString(1, UserText.getText().toString());
            //  pst.setString(2, PasswordText.getText().toString());
            ResultSet rs = pst.executeQuery();
            int x = 1;

            //    String[] columnNames = {"Serial", "ProductId","Product Name","Quantity","SELLING PRICE","SELLING DATE"};
            //  DefaultTableModel model = new DefaultTableModel();
            // model.setColumnIdentifiers(columnNames);
            //   jTable1.setModel(model);
            while (rs.next()) {

                String ProductName = rs.getString("ProductName");
                String ProductId = rs.getString("ProductId");
                String SellingDate = rs.getString("SellingDate");
                int Quantity = rs.getInt("ProductQuantity");
                Float SellPrice = rs.getFloat("SellingPrice");
                String soldby=rs.getString("SoldBy");
                
                model.addRow(new Object[]{x, ProductId, ProductName, Quantity, SellPrice, SellingDate, soldby});
                InvoiceMemberInfo(invoice);
                x++;
            }
            if ((x-1) == 0) {
                // NoMemberText.setText("NO MEMBER FOUND;"
                JOptionPane.showMessageDialog(null, "INVALID INVOICE NUMBER");
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
public void InvoiceMemberInfo(String invoice)
{
      try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Shopmanagement;user=sa;password=123456";
            Connection con = DriverManager.getConnection(url);

            String sql = "SELECT INVOICE.PhoneNumber FROM INVOICE WHERE INVOICE.InvoiceID='"+invoice+"'";
            PreparedStatement pst = con.prepareStatement(sql);
            //   pst.setString(1, UserText.getText().toString());
            //  pst.setString(2, PasswordText.getText().toString());
            ResultSet rs = pst.executeQuery();
            int x = 0;

            while (rs.next()) {

                String phone = rs.getString("PhoneNumber");
                MemberInfo(phone);
               
            }
           
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

}

    public void DateFormate() {
        String from = FromDate.getText();
        String month1 = "";
        String date1 = "";
        String year1 = "";

        int j = 0, k = 0;

        for (int i = 0; i < from.length(); i++) {
            char c = from.charAt(i);
            if (c == '/') {
                ++i;
                j = i;
                break;
            }
            month1 += c;

        }

        for (int i = j; i < from.length(); i++) {
            char c = from.charAt(i);
            if (c == '/') {
                ++i;
                k = i;
                break;
            }
            date1 += c;

        }

        for (int i = k; i < from.length(); i++) {
            char c = from.charAt(i);
            if (c == '/') {

                break;
            }
            year1 += c;

        }

        String To = ToDate.getText();
        String month2 = "";
        String date2 = "";
        String year2 = "";

        j = 0;
        k = 0;

        for (int i = 0; i < To.length(); i++) {
            char c = To.charAt(i);
            if (c == '/') {
                ++i;
                j = i;
                break;
            }
            month2 += c;

        }

        for (int i = j; i < To.length(); i++) {
            char c = To.charAt(i);
            if (c == '/') {
                ++i;
                k = i;
                break;
            }
            date2 += c;

        }

        for (int i = k; i < To.length(); i++) {
            char c = To.charAt(i);
            if (c == '/') {

                break;
            }
            year2 += c;

        }

        startingDate = "20" + year1 + "-" + month1 + "-" + date1;
        endingDate = "20" + year2 + "-" + month2 + "-" + date2;

        System.out.println(startingDate);
        System.out.println(endingDate);
    }
    
    
    public void ShopInfo()
    {
        try {
             
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

            Statement statement = connection.createStatement();
            
           // String sql="SELECT InvoiceID FROM INVOICE where PhoneNumber= '"+phoneNumber1+"'";
            String sql="SELECT * FROM SHOPINFO";
            
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
        //    int x=0;
            while (resultSet.next())
            {
               Shop_Name=resultSet.getString("ShopName");
               Shop_Address=resultSet.getString("Address");
               Shop_Phone=resultSet.getString("Phone");
               Shop_Email=resultSet.getString("Email");
               //Vat=resultSet.getFloat("Vat");
            }
            
        
            connection.close();
       
           
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AddProductMenu;
    private javax.swing.JTextField AddressText;
    private javax.swing.JTextField CompanyNameText;
    private javax.swing.JButton DueBill;
    private javax.swing.JMenuItem DueBillItem;
    private javax.swing.JTextField EmailText;
    private javax.swing.JMenu ExitMenu;
    private datechooser.beans.DateChooserCombo FromDate;
    private javax.swing.JTextField InvoiceNumberText;
    private javax.swing.JMenuItem MemberInfoItem;
    private javax.swing.JTextField MemberNameText;
    private javax.swing.JLabel NoMemberText;
    private javax.swing.JTextField PhoneNumberText;
    private javax.swing.JButton PrintButton;
    private javax.swing.JButton SearchByDate1;
    private javax.swing.JButton SearchByInvoice;
    private javax.swing.JButton SearchByPhone;
    private javax.swing.JMenu SellProductMenu;
    private javax.swing.JMenu StockMenu;
    private datechooser.beans.DateChooserCombo ToDate;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField phoneGetText;
    // End of variables declaration//GEN-END:variables
}
