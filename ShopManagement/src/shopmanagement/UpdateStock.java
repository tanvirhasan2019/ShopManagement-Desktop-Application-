/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagement;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Atel Dot Net
 */
public class UpdateStock extends javax.swing.JFrame {

    private BufferedImage chosen_picture;
    String startingDate , endingDate;
    
    DefaultListModel defaultListModel=new DefaultListModel();
    
    private byte[]personimage=null;
    int ProductQuantity;
    String name;
    float Ownprice;
    float sellingPrice;
    
    String P_id;
    private ImageIcon icon;
    
    /**
     * Creates new form UpdateStock
     */
    public UpdateStock() {
        initComponents();
          this.bindData();
          SetIcon();
          Profit();
    }

    
   public void SetIcon()
    {
        icon=new ImageIcon(getClass().getResource("shop32.png"));
        this.setIconImage(icon.getImage());
    }
 
 
 private ArrayList getStars()
{
    ArrayList stars=new ArrayList();
    
    try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT InvoiceID From INVOICE order by InvoiceID desc");
            
            int InVoice=0;
            //convert int to string
            String convrt="";
            while (resultSet.next()) {
                
                InVoice=resultSet.getInt("InvoiceID");
                //ID=resultSet.getInt("ProductId");
                convrt=String.valueOf(InVoice);
                stars.add(convrt);

                  
            }
            
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    
   
return stars;
}
 
 
 
   private void bindData(){

getStars().stream().forEach((star) -> {
defaultListModel.addElement(star);
});

jList1.setModel(defaultListModel);
jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
}
   private void searchFilter(String searchTerm)
{
DefaultListModel filteredItems=new DefaultListModel();
ArrayList stars=getStars();
stars.stream().forEach((star) -> {
String starName=star.toString().toLowerCase();
if (starName.contains(searchTerm.toLowerCase())) {
filteredItems.addElement(star);
}
});
defaultListModel=filteredItems;
jList1.setModel(defaultListModel);
}


   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ProductIdText = new javax.swing.JTextField();
        ProductNameText = new javax.swing.JTextField();
        QuantityText = new javax.swing.JTextField();
        EntryPrice = new javax.swing.JTextField();
        SellingPrice = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ImageLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        DeleteButton = new javax.swing.JButton();
        fromDate = new datechooser.beans.DateChooserCombo();
        toDate = new datechooser.beans.DateChooserCombo();
        Profit = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        ExitMenu = new javax.swing.JMenu();
        AddProductMenu = new javax.swing.JMenu();
        SellProductMenu = new javax.swing.JMenu();
        StockMenu = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        MemberInfoItem = new javax.swing.JMenuItem();
        DueBillItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("NSimSun", 3, 42)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("UPDATE STOCK");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(523, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(481, 481, 481))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1410, 60);

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));
        jPanel5.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SEARCH PRODUCT ID             :");
        jPanel5.add(jLabel3);
        jLabel3.setBounds(40, 50, 270, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PRODUCT NAME                      :");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(40, 110, 270, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("PRODUCT QUANTITY             :");
        jPanel5.add(jLabel5);
        jLabel5.setBounds(40, 170, 270, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("PRODUCT ENTRY PRICE       :");
        jPanel5.add(jLabel6);
        jLabel6.setBounds(40, 230, 270, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SELLING PRICE                      :");
        jPanel5.add(jLabel7);
        jLabel7.setBounds(40, 290, 270, 40);

        ProductIdText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ProductIdText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ProductIdText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ProductIdTextKeyPressed(evt);
            }
        });
        jPanel5.add(ProductIdText);
        ProductIdText.setBounds(320, 50, 340, 40);

        ProductNameText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ProductNameText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(ProductNameText);
        ProductNameText.setBounds(320, 110, 340, 40);

        QuantityText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        QuantityText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(QuantityText);
        QuantityText.setBounds(320, 170, 340, 40);

        EntryPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EntryPrice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(EntryPrice);
        EntryPrice.setBounds(320, 230, 340, 40);

        SellingPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SellingPrice.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(SellingPrice);
        SellingPrice.setBounds(320, 290, 340, 40);

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SELECT IMAGE");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1);
        jButton1.setBounds(720, 350, 170, 50);

        SearchButton.setBackground(new java.awt.Color(51, 51, 51));
        SearchButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(255, 255, 255));
        SearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/search.png"))); // NOI18N
        SearchButton.setText("  SEARCH");
        SearchButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });
        jPanel5.add(SearchButton);
        SearchButton.setBounds(680, 50, 160, 40);

        jPanel2.setLayout(null);

        ImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/favourite.png"))); // NOI18N
        jPanel2.add(ImageLabel);
        ImageLabel.setBounds(0, 0, 280, 220);

        jPanel5.add(jPanel2);
        jPanel2.setBounds(680, 110, 280, 220);

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/UPDATE32.png"))); // NOI18N
        jButton3.setText("  UPDATE");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);
        jButton3.setBounds(400, 350, 180, 50);

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/h1_setting.png"))); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton2);
        jButton2.setBounds(10, 430, 100, 70);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(20, 130, 970, 510);

        jList1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(1030, 80, 320, 360);

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(1160, 470, 190, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("INVOICE");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1030, 470, 110, 40);

        DeleteButton.setBackground(new java.awt.Color(51, 51, 51));
        DeleteButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        DeleteButton.setText("DELETE");
        DeleteButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(DeleteButton);
        DeleteButton.setBounds(1120, 540, 120, 50);

        fromDate.setCurrentView(new datechooser.view.appearance.AppearancesList("custom",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    fromDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null));
fromDate.setCalendarPreferredSize(new java.awt.Dimension(400, 350));
getContentPane().add(fromDate);
fromDate.setBounds(20, 80, 190, 40);

toDate.setCurrentView(new datechooser.view.appearance.AppearancesList("custom",
    new datechooser.view.appearance.ViewAppearance("custom",
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            true,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 255),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(128, 128, 128),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.LabelPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.LabelPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(255, 0, 0),
            false,
            false,
            new datechooser.view.appearance.swing.ButtonPainter()),
        (datechooser.view.BackRenderer)null,
        false,
        true)));
toDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED,
(java.awt.Color)null,
(java.awt.Color)null,
(java.awt.Color)null,
(java.awt.Color)null));
toDate.setCalendarPreferredSize(new java.awt.Dimension(400, 350));
getContentPane().add(toDate);
toDate.setBounds(250, 80, 190, 40);

Profit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
Profit.setText("PROFIT :");
Profit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
getContentPane().add(Profit);
Profit.setBounds(460, 80, 400, 40);

jButton4.setBackground(new java.awt.Color(51, 51, 51));
jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
jButton4.setForeground(new java.awt.Color(255, 255, 255));
jButton4.setText("SEARCH");
jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
jButton4.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton4ActionPerformed(evt);
    }
    });
    getContentPane().add(jButton4);
    jButton4.setBounds(870, 80, 120, 40);

    jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuBar1.setAlignmentX(1.0F);
    jMenuBar1.setAutoscrolls(true);
    jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jMenuBar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jMenuBar1.setMargin(new java.awt.Insets(5, 5, 50, 50));

    ExitMenu.setBackground(new java.awt.Color(153, 153, 153));
    ExitMenu.setBorder(null);
    ExitMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Atel Dot Net\\Desktop\\IMAGE\\icon\\bb16.png")); // NOI18N
    ExitMenu.setText("BACK");
    ExitMenu.setDelay(100);
    ExitMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    ExitMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    ExitMenu.setPreferredSize(new java.awt.Dimension(105, 19));
    ExitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ExitMenuMouseClicked(evt);
        }
    });
    ExitMenu.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            ExitMenuKeyPressed(evt);
        }
    });
    jMenuBar1.add(ExitMenu);

    AddProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    AddProductMenu.setBorder(null);
    AddProductMenu.setText("     ADD PRODUCT");
    AddProductMenu.setDelay(100);
    AddProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    AddProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    AddProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    AddProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            AddProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(AddProductMenu);

    SellProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    SellProductMenu.setBorder(null);
    SellProductMenu.setText("      SELL PRODUCT");
    SellProductMenu.setDelay(100);
    SellProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    SellProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    SellProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    SellProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            SellProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(SellProductMenu);

    StockMenu.setBackground(new java.awt.Color(153, 153, 153));
    StockMenu.setBorder(null);
    StockMenu.setText("            STOCK");
    StockMenu.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    StockMenu.setDelay(100);
    StockMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    StockMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    StockMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    StockMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            StockMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(StockMenu);

    jMenu6.setBackground(new java.awt.Color(153, 153, 153));
    jMenu6.setBorder(null);
    jMenu6.setText("          ACCOUNT");
    jMenu6.setDelay(100);
    jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu6.setMargin(new java.awt.Insets(0, 0, 0, 50));
    jMenu6.setPreferredSize(new java.awt.Dimension(150, 20));
    jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jMenu6MouseClicked(evt);
        }
    });

    MemberInfoItem.setText("MEMBER INFO");
    MemberInfoItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    MemberInfoItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    MemberInfoItem.setPreferredSize(new java.awt.Dimension(150, 26));
    MemberInfoItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            MemberInfoItemMouseClicked(evt);
        }
    });
    MemberInfoItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            MemberInfoItemActionPerformed(evt);
        }
    });
    jMenu6.add(MemberInfoItem);

    DueBillItem.setText("DUE BILL");
    DueBillItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    DueBillItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    DueBillItem.setPreferredSize(new java.awt.Dimension(127, 26));
    DueBillItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            DueBillItemMouseClicked(evt);
        }
    });
    DueBillItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DueBillItemActionPerformed(evt);
        }
    });
    jMenu6.add(DueBillItem);

    jMenuItem1.setText("SETTING");
    jMenuItem1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem1ActionPerformed(evt);
        }
    });
    jMenu6.add(jMenuItem1);

    jMenuItem2.setText("ALL IMPORTED ITEMS");
    jMenuItem2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jMenuItem2ActionPerformed(evt);
        }
    });
    jMenu6.add(jMenuItem2);

    jMenuBar1.add(jMenu6);

    jMenu2.setBackground(new java.awt.Color(153, 153, 153));
    jMenu2.setText("        REFRESH");
    jMenu2.setActionCommand("    REFRESH");
    jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jMenu2MouseClicked(evt);
        }
    });
    jMenuBar1.add(jMenu2);

    setJMenuBar(jMenuBar1);

    setSize(new java.awt.Dimension(1422, 769));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        
          
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            String sql="SELECT * FROM CURRENT_STOCK WHERE ProductId='"+ProductIdText.getText()+"'";
            //System.out.println(sql);
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
         //DECLARE GLOBAL AS PRODUCT ID FOR NOT TO CHANGE
           P_id=ProductIdText.getText();
           
          //  String name="";
           // int ProductQuantity=0;
               boolean Valid_Id=false;
               while (resultSet.next()) {
               
            //  String ID=resultSet.getString("ProductId");
            //   String ProductName =resultSet.getString("ProductName");
            
               ProductQuantity= resultSet.getInt("ProductQuantity");
               name =resultSet.getString("ProductName");
               Ownprice= resultSet.getFloat("Price");
               sellingPrice=resultSet.getFloat("SellingPrice");
               
               
               
            //  StockIntotal=StockIntotal+Totalprice;
               ProductNameText.setText(""+name);
               QuantityText.setText(""+ProductQuantity);
               EntryPrice.setText(""+Ownprice);
               SellingPrice.setText(""+sellingPrice);
               
               
               // IMAGE
               
               InputStream in = resultSet.getBinaryStream("ProductImage");
               Image image = ImageIO.read(in);
               Image newimg = image.getScaledInstance(280, 220,  java.awt.Image.SCALE_SMOOTH);
               ImageIcon icon=new ImageIcon(newimg);

                ImageLabel.setIcon(icon);
                ImageLabel.revalidate();
                
               Valid_Id=true;
            }
            
            if(Valid_Id==false)
            {
                JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID ID");
            }
            //Intotal.setText("TOTAL STOCK AMOUNT :  "+StockIntotal);
            connection.close();
                
        } catch (Exception e) {
            e.printStackTrace();
        }  
         
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser chooser=new JFileChooser();
       chooser.showOpenDialog(null);
       File f=chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
       ImageIcon imageicon=new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(ImageLabel.getWidth(), ImageLabel.getHeight(), 100));
       ImageLabel.setIcon(imageicon);
       try
       {
           File image=new File(filename);
           FileInputStream fis=new FileInputStream(image);
           
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for (int readNum; (readNum = fis.read(buf)) != -1;) 
            {
              bos.write(buf, 0, readNum);
             // System.out.println("read " + readNum + " bytes,");
            }
            
           personimage = bos.toByteArray();
           
       }catch(Exception e)
       {
           
       }
       

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    
        try
        {
            
            // fetch image 
             Icon icons = ImageLabel.getIcon();
        BufferedImage bi = new BufferedImage(icons.getIconWidth(), icons.getIconHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics g = bi.createGraphics();
        icons.paintIcon(null, g, 0, 0);
        g.setColor(Color.WHITE);
        g.drawString(ImageLabel.getText(), 10, 20);
        g.dispose();

        ByteArrayOutputStream os = new ByteArrayOutputStream();
        ImageIO.write(bi, "jpg", os);
        InputStream fis = new ByteArrayInputStream(os.toByteArray());
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        byte[] buf = new byte[1024];
        for (int readNum; (readNum = fis.read(buf)) != -1;) {
            bos.write(buf, 0, readNum);
            //System.out.println("read " + readNum + " bytes,");
            }
         byte[] bytes = bos.toByteArray();
         personimage = bytes;
         
        
            String P_name=ProductNameText.getText().toString();
            String qnty=QuantityText.getText().toString();
            int quantity=Integer.parseInt(qnty);
            String E_price=EntryPrice.getText();
            float ePrice=Float.parseFloat(E_price);
            String Sell_Price=SellingPrice.getText();
            float s_price=Float.parseFloat(Sell_Price);
            
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;user=sa;password=123456";
            Connection con1 = DriverManager.getConnection(url);
         
            String sql="UPDATE CURRENT_STOCK SET ProductQuantity='"+quantity+"', ProductImage=?, ProductName='"+P_name+"', Price='"+ePrice+"', SellingPrice='"+s_price+"'WHERE "+"ProductId='"+P_id+"'";
           
            PreparedStatement pst = con1.prepareStatement(sql);
            pst.setBytes(1, personimage);
      
            
         pst.executeUpdate();
            
        JOptionPane.showMessageDialog(null, "UPDATED DATA SUCCESSFULLY");
                
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
         
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ShopInfo obj=new ShopInfo();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ProductIdTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductIdTextKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            String sql="SELECT * FROM CURRENT_STOCK WHERE ProductId='"+ProductIdText.getText()+"'";
            //System.out.println(sql);
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
         //DECLARE GLOBAL AS PRODUCT ID FOR NOT TO CHANGE
           P_id=ProductIdText.getText();
           
          //  String name="";
           // int ProductQuantity=0;
               boolean Valid_Id=false;
               while (resultSet.next()) {
               
            //  String ID=resultSet.getString("ProductId");
            //   String ProductName =resultSet.getString("ProductName");
            
               ProductQuantity= resultSet.getInt("ProductQuantity");
               name =resultSet.getString("ProductName");
               Ownprice= resultSet.getFloat("Price");
               sellingPrice=resultSet.getFloat("SellingPrice");
               
               
               
            //  StockIntotal=StockIntotal+Totalprice;
               ProductNameText.setText(""+name);
               QuantityText.setText(""+ProductQuantity);
               EntryPrice.setText(""+Ownprice);
               SellingPrice.setText(""+sellingPrice);
               
               
               // IMAGE
               
               InputStream in = resultSet.getBinaryStream("ProductImage");
               Image image = ImageIO.read(in);
               Image newimg = image.getScaledInstance(280, 220,  java.awt.Image.SCALE_SMOOTH);
               ImageIcon icon=new ImageIcon(newimg);

                ImageLabel.setIcon(icon);
                ImageLabel.revalidate();
                
               Valid_Id=true;
            }
            
            if(Valid_Id==false)
            {
                JOptionPane.showMessageDialog(null, "PLEASE ENTER VALID ID");
            }
            //Intotal.setText("TOTAL STOCK AMOUNT :  "+StockIntotal);
            connection.close();
                
        } catch (Exception e) {
            e.printStackTrace();
        }  
        }
        
    }//GEN-LAST:event_ProductIdTextKeyPressed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
          String selct=jList1.getSelectedValue().toString();
      
      //  System.out.println(selct);
        
        Vector<Character> s1 = new Vector<Character>(); 
        Vector<Character> s2 = new Vector<Character>(); 
      

       int i=0;
       char wt;
       
       for(i=0; i<selct.length(); i++)
       {
            wt=selct.charAt(i);
            // char c='a';
            if(Character.isWhitespace(wt)==false)
            {
                  s1.add(selct.charAt(i));                
            } 
            else if(Character.isWhitespace(wt)==true)
            {
               // s1[i]=selct.charAt(i);
               
                break;
                
            } 
           // s1[i]=selct.charAt(i);
       }
       
   /*    int l=0;
       for(int k=i+0; k<selct.length(); k++)
       {
           s2.add(selct.charAt(k));
           l++;
       }
       */

    int size1=s1.size();
 //   int size2=s2.size();
    char ss1[]=new char[size1];
  //  char ss2[]=new char[size2];
    for(i=0; i<size1; i++)
    {
        ss1[i]=s1.get(i);
    }
    
  /*  for(i=0; i<size2; i++)
    {
        ss2[i]=s2.get(i);
    }
     */
    
      String st1=new String(ss1);
  
     // String st2=new String(ss2);
     jTextField1.setText(st1);
  
    }//GEN-LAST:event_jList1MouseClicked

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        try
        {
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;user=sa;password=123456";
            Connection con1 = DriverManager.getConnection(url);
         
            String sql="DELETE FROM INVOICE WHERE InvoiceID='"+jTextField1.getText()+"'";
           
            PreparedStatement pst = con1.prepareStatement(sql);
          
      
           Update_Current_Stock();
           Update_Sold_item();
           UpdateDue_Bill();
         
           
           pst.executeUpdate();
           con1.close();
         
          JOptionPane.showMessageDialog(null, "DELETED INVOICE SUCCESSFULLY");
          Profit_Delete();
         
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        jTextField1.setText("");
         this.bindData();
          
          dispose();
          UpdateStock obj=new UpdateStock();
          obj.setVisible(true);
       // UpdateStock obj=new UpdateStock();
        
        
    }//GEN-LAST:event_DeleteButtonActionPerformed

    public void Profit_Delete() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;user=sa;password=123456";
            Connection con1 = DriverManager.getConnection(url);

            String sql = "DELETE FROM Profit WHERE Invoice='" + jTextField1.getText() + "'";

            PreparedStatement pst = con1.prepareStatement(sql);

            Update_Current_Stock();
            Update_Sold_item();
            UpdateDue_Bill();

            pst.executeUpdate();
            con1.close();

          

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
    private void ExitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMenuMouseClicked
        // TODO add your handling code here:
         HomePage obj=new HomePage();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ExitMenuMouseClicked

    private void ExitMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitMenuKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_ExitMenuKeyPressed

    private void AddProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddProductMenuMouseClicked
        // TODO add your handling code here:
        AddProduct obj=new AddProduct();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_AddProductMenuMouseClicked

    private void SellProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SellProductMenuMouseClicked
        // TODO add your handling code here:
        SellProduct obj=new SellProduct();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SellProductMenuMouseClicked

    private void StockMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockMenuMouseClicked
        // TODO add your handling code here:
        StockInfo obj=new StockInfo();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_StockMenuMouseClicked

    private void MemberInfoItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MemberInfoItemMouseClicked
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemMouseClicked

    private void MemberInfoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberInfoItemActionPerformed
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemActionPerformed

    private void DueBillItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DueBillItemMouseClicked
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemMouseClicked

    private void DueBillItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DueBillItemActionPerformed
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemActionPerformed

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu6MouseClicked
        // TODO add your handling code here:
      //   ShopInfo obj=new ShopInfo();
        //obj.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_jMenu6MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         ShopInfo obj=new ShopInfo();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        UpdateAllProducts obj=new UpdateAllProducts();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        UpdateStock obj=new UpdateStock();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Profit();
    }//GEN-LAST:event_jButton4ActionPerformed

    public void  UpdateDue_Bill()
    {
         try
        {
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;user=sa;password=123456";
            Connection con1 = DriverManager.getConnection(url);
         
            String sql="DELETE FROM DUEALL WHERE Invoice='"+jTextField1.getText()+"'";
           
            PreparedStatement pst = con1.prepareStatement(sql);
          
      
           pst.executeUpdate();
           con1.close();
         
         
         
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "UpdateDue_Bill"+e);
        }
    }
    
    public void   Update_Sold_item()
    {
        try
        {
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url="jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;user=sa;password=123456";
            Connection con1 = DriverManager.getConnection(url);
         
            String sql="DELETE FROM SOLD_PRODUCT WHERE InvoiceID='"+jTextField1.getText()+"'";
           
            PreparedStatement pst = con1.prepareStatement(sql);
          
      
           pst.executeUpdate();
           con1.close();
         
         
         
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Update_Sold_item"+e);
        }
    }
    
    public void Update_Current_Stock()
    {
        //FETCH PRODUCT ID , QUANTITY
         Vector<String>ProductID=new Vector();
         Vector<Integer>Quantity=new Vector();
        try
        {
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

            System.out.println("Problem here....0");
            Statement statement = connection.createStatement();
            String sql="SELECT * FROM SOLD_PRODUCT WHERE InvoiceID='"+jTextField1.getText()+"'";
            //System.out.println(sql);
            System.out.println("Problem here....1");
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
           
            
            String P="";
            int Q=0;
            
            while (resultSet.next()) 
            {
               P=resultSet.getString("ProductId");
               Q=resultSet.getInt("ProductQuantity");
               
               ProductID.add(P);
               Quantity.add(Q);
               
            }
               
         
          connection.close();
           }catch(Exception e)
        {
             JOptionPane.showMessageDialog(null, e);
        }
          
          //UPDATE CURRENT STOCK
          int length=0;
          String P_ID;
          int Qnt;
          
          length=ProductID.size();
          
          for(int i=0; i<length; i++)
          {
              
            P_ID=ProductID.get(i);
            Qnt=Quantity.get(i);
            
            
            try
            {
              Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
              String url="jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;user=sa;password=123456";
             Connection con1 = DriverManager.getConnection(url);
           
             String sql1="UPDATE CURRENT_STOCK SET ProductQuantity=ProductQuantity +"+Qnt+"WHERE ProductId='"+P_ID+"'";
         
             PreparedStatement pst1 = con1.prepareStatement(sql1);
         
             pst1.executeUpdate();
            
            }catch(Exception e)
            {
               JOptionPane.showMessageDialog(null, e);
            }
           //System.out.println("Current Stock Complete");
         }
    }
    
  public void Profit()
  {
       DateFormate();
       // PROFIT DATA;
       try
        {
         Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

            System.out.println("Problem here....0");
            Statement statement = connection.createStatement();
            String sql="SELECT Amount FROM Profit WHERE SellDate>='"+startingDate+"' AND SellDate<='"+endingDate+"'";
            //System.out.println(sql);
          //  System.out.println("Problem here....1");
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
           
         
            float amnt=0;
            
            while (resultSet.next()) 
            {
                amnt +=resultSet.getFloat("Amount");
               
            }
               
          Profit.setText("PROFIT "+amnt);
          connection.close();
           }catch(Exception e)
        {
             JOptionPane.showMessageDialog(null, e);
        }
        
       
  }
  
    public void DateFormate() {
        String from = fromDate.getText();
        String month1 = "";
        String date1 = "";
        String year1 = "";

        int j = 0, k = 0;

        for (int i = 0; i < from.length(); i++) {
            char c = from.charAt(i);
            if (c == '/') {
                ++i;
                j = i;
                break;
            }
            month1 += c;

        }

        for (int i = j; i < from.length(); i++) {
            char c = from.charAt(i);
            if (c == '/') {
                ++i;
                k = i;
                break;
            }
            date1 += c;

        }

        for (int i = k; i < from.length(); i++) {
            char c = from.charAt(i);
            if (c == '/') {

                break;
            }
            year1 += c;

        }

        String To = toDate.getText();
        String month2 = "";
        String date2 = "";
        String year2 = "";

        j = 0;
        k = 0;

        for (int i = 0; i < To.length(); i++) {
            char c = To.charAt(i);
            if (c == '/') {
                ++i;
                j = i;
                break;
            }
            month2 += c;

        }

        for (int i = j; i < To.length(); i++) {
            char c = To.charAt(i);
            if (c == '/') {
                ++i;
                k = i;
                break;
            }
            date2 += c;

        }

        for (int i = k; i < To.length(); i++) {
            char c = To.charAt(i);
            if (c == '/') {

                break;
            }
            year2 += c;

        }

        startingDate = "20" + year1 + "-" + month1 + "-" + date1;
        endingDate = "20" + year2 + "-" + month2 + "-" + date2;

        System.out.println(startingDate);
        System.out.println(endingDate);
    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AddProductMenu;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JMenuItem DueBillItem;
    private javax.swing.JTextField EntryPrice;
    private javax.swing.JMenu ExitMenu;
    private javax.swing.JLabel ImageLabel;
    private javax.swing.JMenuItem MemberInfoItem;
    private javax.swing.JTextField ProductIdText;
    private javax.swing.JTextField ProductNameText;
    private javax.swing.JTextField Profit;
    private javax.swing.JTextField QuantityText;
    private javax.swing.JButton SearchButton;
    private javax.swing.JMenu SellProductMenu;
    private javax.swing.JTextField SellingPrice;
    private javax.swing.JMenu StockMenu;
    private datechooser.beans.DateChooserCombo fromDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private datechooser.beans.DateChooserCombo toDate;
    // End of variables declaration//GEN-END:variables
}
