/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagement;

import datechooser.beans.DateChooserCombo;
import java.awt.Image;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Atel Dot Net
 */
public class StockInfo extends javax.swing.JFrame {

    
    
    
     String prodctId;
     String prdctname;
     DefaultListModel defaultListModel=new DefaultListModel();
      String productname;
      String startingDate, endingDate;
      boolean SearchFieldExit=false;
      boolean ListExit=false;
      private ImageIcon icon;
    /**
     * Creates new form StockInfo
     */
    public StockInfo() {
        initComponents();
        SetIcon();
       jScrollPane1.setVisible(false);
       jScrollPane1.setBounds(0,0,0,0);
       this.bindData();
       Current_stock();  
        
    }

    
    public void SetIcon()
    {
        icon=new ImageIcon(getClass().getResource("shop32.png"));
        this.setIconImage(icon.getImage());
    }
 private ArrayList getStars()
{
    ArrayList stars=new ArrayList();
    
    try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        Connection connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            ResultSet resultSet = statement
                    .executeQuery("SELECT ProductId, ProductName FROM CURRENT_STOCK");
            
            
            while (resultSet.next()) {
                
                prodctId=resultSet.getString("ProductId");
                prdctname=resultSet.getString("ProductName");
                stars.add(prodctId+"   "+prdctname);
            }
            
           connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    
   
return stars;
}
 
 
 
   private void bindData(){

getStars().stream().forEach((star) -> {
defaultListModel.addElement(star);
});

jList3.setModel(defaultListModel);
jList3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
}
   
   private void searchFilter(String searchTerm)
{
DefaultListModel filteredItems=new DefaultListModel();
ArrayList stars=getStars();
stars.stream().forEach((star) -> {
String starName=star.toString().toLowerCase();
if (starName.contains(searchTerm.toLowerCase())) {
filteredItems.addElement(star);
}
});
defaultListModel=filteredItems;
jList3.setModel(defaultListModel);

}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        searchField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CurrentStock = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        productImage = new javax.swing.JLabel();
        ShowAll = new javax.swing.JButton();
        fromDate = new datechooser.beans.DateChooserCombo();
        toDate = new datechooser.beans.DateChooserCombo();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        searchByDate = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        ExitMenu = new javax.swing.JMenu();
        AddProductMenu = new javax.swing.JMenu();
        SellProductMenu = new javax.swing.JMenu();
        StockMenu = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        MemberInfoItem = new javax.swing.JMenuItem();
        DueBillItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jList3.setBackground(new java.awt.Color(204, 204, 204));
        jList3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jList3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jList3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jList3MouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(jList3);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(260, 270, 730, 180);

        searchField.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchField.setForeground(new java.awt.Color(51, 51, 51));
        searchField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchFieldMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchFieldMouseExited(evt);
            }
        });
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        getContentPane().add(searchField);
        searchField.setBounds(250, 150, 730, 40);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("STOCK INFORMATION");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(447, 447, 447)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(488, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1350, 50);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial", "Product ID", "Product Name", "Quantity", "Entry Date", "Entry By", "Price", "Total Price"
            }
        ));
        jTable1.setRowHeight(35);
        jTable1.setRowMargin(2);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 250, 1320, 420);

        CurrentStock.setBackground(new java.awt.Color(51, 102, 255));
        CurrentStock.setFont(new java.awt.Font("Tempus Sans ITC", 3, 24)); // NOI18N
        CurrentStock.setForeground(new java.awt.Color(255, 255, 255));
        CurrentStock.setText("CURRENT STOCK");
        CurrentStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrentStockActionPerformed(evt);
            }
        });
        getContentPane().add(CurrentStock);
        CurrentStock.setBounds(250, 200, 340, 40);

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setBackground(new java.awt.Color(51, 102, 255));
        jLabel10.setFont(new java.awt.Font("Tempus Sans ITC", 3, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("SEARCH ITEM");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopmanagement/search.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 150, 220, 40);

        productImage.setText("                         IMAGE");
        productImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(productImage);
        productImage.setBounds(990, 60, 340, 170);

        ShowAll.setBackground(new java.awt.Color(51, 102, 255));
        ShowAll.setFont(new java.awt.Font("Tempus Sans ITC", 3, 24)); // NOI18N
        ShowAll.setForeground(new java.awt.Color(255, 255, 255));
        ShowAll.setText("SHOW ALL PRODUCTS");
        ShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAllActionPerformed(evt);
            }
        });
        getContentPane().add(ShowAll);
        ShowAll.setBounds(670, 200, 310, 40);

        fromDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    fromDate.setCalendarPreferredSize(new java.awt.Dimension(328, 183));
    fromDate.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
    fromDate.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 16));
    getContentPane().add(fromDate);
    fromDate.setBounds(250, 80, 240, 40);

    toDate.setCalendarPreferredSize(new java.awt.Dimension(330, 201));
    toDate.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 16));
    getContentPane().add(toDate);
    toDate.setBounds(630, 80, 220, 40);

    jLabel3.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
    jLabel3.setText("TO DATE :");
    getContentPane().add(jLabel3);
    jLabel3.setBounds(510, 80, 110, 40);

    jLabel4.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
    jLabel4.setText("FROM DATE :");
    getContentPane().add(jLabel4);
    jLabel4.setBounds(110, 70, 140, 50);

    searchByDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    searchByDate.setText("SEARCH");
    searchByDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    searchByDate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchByDateActionPerformed(evt);
        }
    });
    getContentPane().add(searchByDate);
    searchByDate.setBounds(860, 80, 120, 40);

    jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jMenuBar1.setAlignmentX(1.0F);
    jMenuBar1.setAutoscrolls(true);
    jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jMenuBar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jMenuBar1.setMargin(new java.awt.Insets(5, 5, 50, 50));

    ExitMenu.setBackground(new java.awt.Color(153, 153, 153));
    ExitMenu.setBorder(null);
    ExitMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Atel Dot Net\\Desktop\\IMAGE\\icon\\bb16.png")); // NOI18N
    ExitMenu.setText("BACK");
    ExitMenu.setDelay(100);
    ExitMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    ExitMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    ExitMenu.setPreferredSize(new java.awt.Dimension(105, 19));
    ExitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ExitMenuMouseClicked(evt);
        }
    });
    ExitMenu.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            ExitMenuKeyPressed(evt);
        }
    });
    jMenuBar1.add(ExitMenu);

    AddProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    AddProductMenu.setBorder(null);
    AddProductMenu.setText("     ADD PRODUCT");
    AddProductMenu.setDelay(100);
    AddProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    AddProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    AddProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    AddProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            AddProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(AddProductMenu);

    SellProductMenu.setBackground(new java.awt.Color(153, 153, 153));
    SellProductMenu.setBorder(null);
    SellProductMenu.setText("      SELL PRODUCT");
    SellProductMenu.setDelay(100);
    SellProductMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    SellProductMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    SellProductMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    SellProductMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            SellProductMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(SellProductMenu);

    StockMenu.setBackground(new java.awt.Color(153, 153, 153));
    StockMenu.setBorder(null);
    StockMenu.setText("            STOCK");
    StockMenu.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
    StockMenu.setDelay(100);
    StockMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    StockMenu.setMargin(new java.awt.Insets(0, 0, 0, 50));
    StockMenu.setPreferredSize(new java.awt.Dimension(150, 20));
    StockMenu.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            StockMenuMouseClicked(evt);
        }
    });
    jMenuBar1.add(StockMenu);

    jMenu6.setBackground(new java.awt.Color(153, 153, 153));
    jMenu6.setBorder(null);
    jMenu6.setText("          ACCOUNT");
    jMenu6.setDelay(100);
    jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu6.setMargin(new java.awt.Insets(0, 0, 0, 50));
    jMenu6.setPreferredSize(new java.awt.Dimension(150, 20));

    MemberInfoItem.setText("MEMBER INFO");
    MemberInfoItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    MemberInfoItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    MemberInfoItem.setPreferredSize(new java.awt.Dimension(150, 26));
    MemberInfoItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            MemberInfoItemMouseClicked(evt);
        }
    });
    MemberInfoItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            MemberInfoItemActionPerformed(evt);
        }
    });
    jMenu6.add(MemberInfoItem);

    DueBillItem.setText("DUE BILL");
    DueBillItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    DueBillItem.setMargin(new java.awt.Insets(0, 0, 0, 50));
    DueBillItem.setPreferredSize(new java.awt.Dimension(127, 26));
    DueBillItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            DueBillItemMouseClicked(evt);
        }
    });
    DueBillItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DueBillItemActionPerformed(evt);
        }
    });
    jMenu6.add(DueBillItem);
    jMenu6.add(jMenuItem1);

    jMenuBar1.add(jMenu6);

    jMenu1.setBackground(new java.awt.Color(153, 153, 153));
    jMenu1.setText("        REFRESH");
    jMenu1.setActionCommand("    REFRESH");
    jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jMenu1MouseClicked(evt);
        }
    });
    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    setSize(new java.awt.Dimension(1363, 758));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CurrentStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrentStockActionPerformed
        // TODO add your handling code here:
        
         Current_stock();  
         
    }//GEN-LAST:event_CurrentStockActionPerformed

    public void Current_stock()
    {
           try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            String sql="SELECT * FROM CURRENT_STOCK";
            //System.out.println(sql);
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
          //  String sql="SELECT * FROM AdmissionForm WHERE MemberId=?";
           String[] columnNames = {"Serial", "ProductId","Product Name", "Product QUANTITY", "Price", "Selling Price"};
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
          //  jTable1.getColumnModel().getColumn(0).setPreferredWidth(3);
          //  jTable1.getColumnModel().getColumn(1).setPreferredWidth(5);
           // jTable1.getColumnModel().getColumn(3).setPreferredWidth(10);
          //  jTable1.getColumnModel().getColumn(6).setPreferredWidth(10);
            int i=1;
            float StockIntotal=0;
            
            while (resultSet.next()) {
               
               String ID=resultSet.getString("ProductId");
            //   String ProductName =resultSet.getString("ProductName");
               int ProductQuantity= resultSet.getInt("ProductQuantity");
               
               String name =resultSet.getString("ProductName");
               float Sprice= resultSet.getFloat("Price");
               float sellingPrice=resultSet.getFloat("SellingPrice");
           
                
               model.addRow(new Object[]{i, ID,name, ProductQuantity, Sprice, sellingPrice});
               i++;
               
            //  StockIntotal=StockIntotal+Totalprice;

                  
            }
            //Intotal.setText("TOTAL STOCK AMOUNT :  "+StockIntotal);
            connection.close();
                
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        
               int row = this.jTable1.getSelectedRow();
              // int column = this.jTable1.getSelectedColumn();
               String id1=jTable1.getValueAt(row, 1).toString();
              // int x=Integer.parseInt(id1);
          //     System.out.println("ID PRINT "+id1);
               
                try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            String sql="SELECT ProductImage FROM CURRENT_STOCK where ProductId ='"+id1+"'";
         //   System.out.println(id1);
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
               while (resultSet.next()) {
                   
               InputStream in = resultSet.getBinaryStream("ProductImage");
               Image image = ImageIO.read(in);
               Image newimg = image.getScaledInstance(340, 170,  java.awt.Image.SCALE_SMOOTH);
               ImageIcon icon=new ImageIcon(newimg);

                productImage.setIcon(icon);
                productImage.revalidate();
                
               }
             
            connection.close();
                
        } catch (Exception e) {
            
             productImage.setIcon(null);
             productImage.revalidate();

            e.printStackTrace();
        } 
  
    }//GEN-LAST:event_jTable1MouseClicked

    private void ShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAllActionPerformed
        // TODO add your handling code here:
        
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            String sql="SELECT A.ProductId, A.EntryBy, A.EntryDate, A.ImportAddress, A.Price, A.ProductQuantity, A.SellPrice, C.ProductName\n"+
            "FROM ALLSTOCK A LEFT JOIN CURRENT_STOCK C ON A.ProductId=C.ProductId";
           // String sql2="SELECT ProductName FROM CURRENT_STOCK WH";
            //System.out.println(sql);
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
          //  String sql="SELECT * FROM AdmissionForm WHERE MemberId=?";
           String[] columnNames = {"Serial", "ProductId", "ProductName","Quantity", "ENTRY DATE","Price","Sell Price","IMPORT ADDRESS","ENTRY BY"};
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(3);
           // jTable1.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(4);
           // jTable1.getColumnModel().getColumn(6).setPreferredWidth(10);
            int i=1;
            float StockIntotal=0;
            float sellprice=0;
            while (resultSet.next()) {
               
               //int ID=resultSet.getInt("id");
               String PID=resultSet.getString("ProductId");
               String ProductName =resultSet.getString("ProductName");
               int ProductQuantity= resultSet.getInt("ProductQuantity");
               String address =resultSet.getString("ImportAddress");
           //    float sellingPrice =resultSet.getFloat("SellingPrice");

               float Sprice= resultSet.getFloat("Price");
               float Total=ProductQuantity*Sprice;
               String EntryName =resultSet.getString("EntryBy");      
              // float Totalprice= resultSet.getFloat("TotalPrice");
               String date =resultSet.getString("EntryDate");
               sellprice=resultSet.getFloat("SellPrice");
               
              
           
               model.addRow(new Object[]{i, PID, ProductName, ProductQuantity,date, Sprice, sellprice, address, EntryName});
               i++;
               
            
            }
            connection.close();
                
        } catch (Exception e) {
            e.printStackTrace();
        }
         
    
    }//GEN-LAST:event_ShowAllActionPerformed

    private void searchFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseEntered
        // TODO add your handling code here:
       
       jScrollPane1.setBounds(250,180,730,500);
       jScrollPane1.setVisible(true);
    }//GEN-LAST:event_searchFieldMouseEntered

    private void searchFieldMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseExited
        // TODO add your handling code here:
       SearchFieldExit=true;
       if(SearchFieldExit==true && ListExit==true)
       {
          jScrollPane1.setBounds(250,150,0, 0);
          jScrollPane1.setVisible(false);
       }
      
    }//GEN-LAST:event_searchFieldMouseExited

    private void jList3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseEntered
        // TODO add your handling code here:
       jScrollPane1.setBounds(250,180,730,500);
       jScrollPane1.setVisible(true);
    }//GEN-LAST:event_jList3MouseEntered

    private void jList3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseExited
        // TODO add your handling code here:
         ListExit=true;
         if(SearchFieldExit==true && ListExit==true)
         {
           jScrollPane1.setBounds(250,150,0, 0);
           jScrollPane1.setVisible(false);
         }
     //  jScrollPane1.setBounds(250,150, 0, 0);
    //   jScrollPane1.setVisible(false);
    }//GEN-LAST:event_jList3MouseExited

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        searchFilter(searchField.getText());
    }//GEN-LAST:event_searchFieldKeyReleased

    private void jList3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseClicked
        // TODO add your handling code here:
         String selct=jList3.getSelectedValue().toString();
      
         
       jScrollPane1.setBounds(250,120,0, 0);
       jScrollPane1.setVisible(false);
       
        Vector<Character> s1 = new Vector<Character>(); 
        Vector<Character> s2 = new Vector<Character>(); 
      
       int i=0;
       char wt;
       
       for(i=0; i<selct.length(); i++)
       {
            wt=selct.charAt(i);
            // char c='a';
            if(Character.isWhitespace(wt)==false)
            {
                  s1.add(selct.charAt(i));                
            } 
            else if(Character.isWhitespace(wt)==true)
            {
                i=i+3;
                break;
                
            } 
           
       }
       
       int l=0;
       for(int k=i+0; k<selct.length(); k++)
       {
           s2.add(selct.charAt(k));
           l++;
       }
    
    int size1=s1.size();
    int size2=s2.size();
    
    char ss1[]=new char[size1];
    char ss2[]=new char[size2];
    
    
    for(i=0; i<size1; i++)
    {
        ss1[i]=s1.get(i);
    }
    
    for(i=0; i<size2; i++)
    {
        ss2[i]=s2.get(i);
    }
     
      String st1=new String(ss1);
      String st2=new String(ss2);
    
      
    //  Integer result1 = Integer.valueOf(st1);
      getData(st1);
     
    }//GEN-LAST:event_jList3MouseClicked

    private void searchByDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByDateActionPerformed


        // TODO add your handling code here:
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");

          
             DateFormate();   
            
            Statement statement = connection.createStatement();
            String sql="SELECT  A.*, C.ProductName FROM ALLSTOCK A, CURRENT_STOCK C\n" +
"WHERE A.ProductId=C.ProductId AND\n" +
" A.EntryDate IN (SELECT A.EntryDate FROM ALLSTOCK WHERE A.EntryDate >='"+startingDate+"' AND A.EntryDate<='"+endingDate+"')";
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
           
          //  resultSet.setString(1, fromDate.getText());
             
          //  String sql="SELECT * FROM AdmissionForm WHERE MemberId=?";
           String[] columnNames = {"Serial", "ProductId","Product Name","Quantity","IMPORT ADDRESS", "IMPORT DATE", "PRICE", "ENTRY BY"};
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
         //   jTable1.getColumnModel().getColumn(0).setPreferredWidth(3);
           // jTable1.getColumnModel().getColumn(1).setPreferredWidth(5);
         //   jTable1.getColumnModel().getColumn(4).setPreferredWidth(4);
           // jTable1.getColumnModel().getColumn(6).setPreferredWidth(10);
            int i=1;
            float StockIntotal=0;
           
              
            
            while (resultSet.next()) {
               
               //int ID=resultSet.getInt("id");
               String PID=resultSet.getString("ProductId");
            //   String ProductName =resultSet.getString("ProductName");
               int ProductQuantity= resultSet.getInt("ProductQuantity");
               String name =resultSet.getString("ProductName");
               String address =resultSet.getString("Importaddress");
               String date =resultSet.getString("EntryDate");
               String entryname  =resultSet.getString("EntryBy");
           //    float sellingPrice =resultSet.getFloat("SellingPrice");

               float Sprice= resultSet.getFloat("Price");
              // float Total=ProductQuantity*Sprice;
              // String EntryName =resultSet.getString("EntryBy");      
              // float Totalprice= resultSet.getFloat("TotalPrice");
             //  String date =resultSet.getString("EntryDate");

               
              
           
               model.addRow(new Object[]{i, PID, name, ProductQuantity,address, date,  Sprice, entryname});
               i++;
               
            
            }
            connection.close();
                
        } catch (Exception e) {
            e.printStackTrace();
        }
         
        
    }//GEN-LAST:event_searchByDateActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void ExitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMenuMouseClicked
        // TODO add your handling code here:
        HomePage obj=new HomePage();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ExitMenuMouseClicked

    private void ExitMenuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitMenuKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_ExitMenuKeyPressed

    private void AddProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddProductMenuMouseClicked
        // TODO add your handling code here:
        AddProduct obj=new AddProduct();
        obj.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_AddProductMenuMouseClicked

    private void SellProductMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SellProductMenuMouseClicked
        // TODO add your handling code here:
        SellProduct obj=new SellProduct();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_SellProductMenuMouseClicked

    private void StockMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StockMenuMouseClicked
        // TODO add your handling code here:
       // StockInfo obj=new StockInfo();
       // obj.setVisible(true);
      //  this.dispose();

    }//GEN-LAST:event_StockMenuMouseClicked

    private void MemberInfoItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MemberInfoItemMouseClicked
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemMouseClicked

    private void MemberInfoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberInfoItemActionPerformed
        // TODO add your handling code here:
        MemberAccount obj=new MemberAccount();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MemberInfoItemActionPerformed

    private void DueBillItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DueBillItemMouseClicked
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemMouseClicked

    private void DueBillItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DueBillItemActionPerformed
        // TODO add your handling code here:
        DueBill obj=new DueBill();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_DueBillItemActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        StockInfo obj=new StockInfo();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu1MouseClicked
    
    public void getData(String id)
    {
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
             Connection connection = DriverManager.getConnection(
                     "jdbc:sqlserver://localhost:1433;databaseName=ShopManagement;selectMethod=cursor", "sa", "123456");


            Statement statement = connection.createStatement();
            String sql="SELECT * FROM CURRENT_STOCK WHERE ProductId='"+id+"'";
            
            ResultSet resultSet = statement
                    .executeQuery(sql);
            
             
          //  String sql="SELECT * FROM AdmissionForm WHERE MemberId=?";
           String[] columnNames = {"Serial", "ProductId","Product Name","Quantity","Cost Price" ,"Selling Price"};
           DefaultTableModel model = new DefaultTableModel();
           model.setColumnIdentifiers(columnNames);
          
           jTable1.setModel(model);
            
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(3);
           // jTable1.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(4);
           // jTable1.getColumnModel().getColumn(6).setPreferredWidth(10);
            int i=1;
            float StockIntotal=0;
            float sel_p;
              
            
            while (resultSet.next()) {
               
               //int ID=resultSet.getInt("id");
               String PID=resultSet.getString("ProductId");
            //   String ProductName =resultSet.getString("ProductName");
               int ProductQuantity= resultSet.getInt("ProductQuantity");
               String name =resultSet.getString("ProductName");
           //    float sellingPrice =resultSet.getFloat("SellingPrice");

               float Sprice= resultSet.getFloat("Price");
               float Total=ProductQuantity*Sprice;
               sel_p=resultSet.getFloat("SellingPrice");
              // String EntryName =resultSet.getString("EntryBy");      
              // float Totalprice= resultSet.getFloat("TotalPrice");
             //  String date =resultSet.getString("EntryDate");

               
              
           
               model.addRow(new Object[]{i, PID, name, ProductQuantity, Sprice, sel_p});
               i++;
               
            
            }
            connection.close();
                
        } catch (Exception e) {
            e.printStackTrace();
        }
         
    }
    
    public void DateFormate()
    {
        String from=fromDate.getText();
            String month1="";
            String date1="";
            String year1="";
           
            int j=0, k=0;
            
            for(int i=0; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    ++i;
                    j=i;
                    break;
                }
                month1 +=c;
               
            }
            
             for(int i=j; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    ++i;
                    k=i;
                    break;
                }
                date1 +=c;
               
            }
            
             for(int i=k; i<from.length(); i++)
            {
                char c=from.charAt(i);
                if(c=='/')
                {
                    
                    break;
                }
                year1 +=c;
               
            }
             
             
              String To=toDate.getText();
            String month2="";
            String date2="";
            String year2="";
           
             j=0;
             k=0;
            
            for(int i=0; i<To.length(); i++)
            {
                char c=To.charAt(i);
                if(c=='/')
                {
                    ++i;
                    j=i;
                    break;
                }
                month2 +=c;
               
            }
            
             for(int i=j; i<To.length(); i++)
            {
                char c=To.charAt(i);
                if(c=='/')
                {
                    ++i;
                    k=i;
                    break;
                }
                date2 +=c;
               
            }
            
             for(int i=k; i<To.length(); i++)
            {
                char c=To.charAt(i);
                if(c=='/')
                {
                    
                    break;
                }
                year2 +=c;
               
            }
             
             startingDate="20"+year1+"-"+month1+"-"+date1;
             endingDate="20"+year2+"-"+month2+"-"+date2;
             
             System.out.println(startingDate);
             System.out.println(endingDate);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AddProductMenu;
    private javax.swing.JButton CurrentStock;
    private javax.swing.JMenuItem DueBillItem;
    private javax.swing.JMenu ExitMenu;
    private javax.swing.JMenuItem MemberInfoItem;
    private javax.swing.JMenu SellProductMenu;
    private javax.swing.JButton ShowAll;
    private javax.swing.JMenu StockMenu;
    private datechooser.beans.DateChooserCombo fromDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel productImage;
    private javax.swing.JButton searchByDate;
    private javax.swing.JTextField searchField;
    private datechooser.beans.DateChooserCombo toDate;
    // End of variables declaration//GEN-END:variables

   
}

